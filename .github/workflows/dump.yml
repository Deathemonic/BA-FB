name: Dump Data

on:
  schedule:
    - cron: '0 3 * * 1-5'
    - cron: '0 5 * * 1-5'
    - cron: '0 7 * * 1-5'
    - cron: '0 9 * * 1-5'
    - cron: '0 7 * * *'
  workflow_dispatch:

jobs:
  dump-data:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest release info
        id: release
        run: |
          RELEASE_DATA=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest)
          
          DOWNLOAD_URL=$(echo "$RELEASE_DATA" | jq -r '.assets[] | select(.name | contains("linux")) | .browser_download_url' | head -1)
          
          if [ "$DOWNLOAD_URL" = "null" ] || [ -z "$DOWNLOAD_URL" ]; then
            echo "No Linux asset found in latest release"
            echo "Available assets:"
            echo "$RELEASE_DATA" | jq -r '.assets[].name'
            exit 1
          fi
          
          echo "download_url=$DOWNLOAD_URL" >> $GITHUB_OUTPUT
          echo "Found download URL: $DOWNLOAD_URL"

      - name: Download latest release
        run: |
          wget "${{ steps.release.outputs.download_url }}" -O release.zip

      - name: Extract executable
        run: |
          unzip release.zip
          EXECUTABLE=$(find . -name "bafb*" -type f | head -1)
          if [ -z "$EXECUTABLE" ]; then
            echo "No executable found matching 'bafb*'"
            echo "Contents of zip:"
            ls -la
            exit 1
          fi
          chmod +x "$EXECUTABLE"
          if [ "$EXECUTABLE" != "./bafb" ]; then
            ln -s "$EXECUTABLE" bafb
          fi

      - name: Run Japan dump
        run: |
          ./bafb dump japan --output ./Japan

      - name: Run Global dump
        run: |
          ./bafb dump global --output ./Global

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Switch to data branch
        run: |
          git checkout -B data

      - name: Clean previous data and add new data
        run: |
          # Remove everything except .git directory
          find . -name ".git" -prune -o -type f -exec rm {} +
          find . -name ".git" -prune -o -type d -empty -delete 2>/dev/null || true
          
          # Move the dump folders to root
          if [ -d "Japan" ]; then
            cp -r Japan/* . 2>/dev/null || true
            rm -rf Japan
          fi
          if [ -d "Global" ]; then
            cp -r Global/* . 2>/dev/null || true
            rm -rf Global
          fi
          
          # Add all files
          git add .

      - name: Commit and push changes
        run: |
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update data dumps - $(date '+%Y-%m-%d %H:%M:%S')"
            git push origin data --force
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}