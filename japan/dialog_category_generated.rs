// automatically generated by the FlatBuffers compiler, do not modify
// @generated
#![allow(unused_imports, dead_code)]
#![allow(non_camel_case_types, non_snake_case, non_upper_case_globals)]
extern crate alloc;
extern crate flatbuffers;
use alloc::boxed::Box;
use alloc::string::{String, ToString};
use alloc::vec::Vec;
use core::mem;
use core::cmp::Ordering;
extern crate serde;
use self::serde::ser::{Serialize, Serializer, SerializeStruct};
use self::flatbuffers::{EndianScalar, Follow};
use super::*;
#[deprecated(since = "2.0.0", note = "Use associated constants instead. This will no longer be generated in 2021.")]
pub const ENUM_MIN_DIALOG_CATEGORY: i32 = 0;
#[deprecated(since = "2.0.0", note = "Use associated constants instead. This will no longer be generated in 2021.")]
pub const ENUM_MAX_DIALOG_CATEGORY: i32 = 74;
#[deprecated(since = "2.0.0", note = "Use associated constants instead. This will no longer be generated in 2021.")]
#[allow(non_camel_case_types)]
pub const ENUM_VALUES_DIALOG_CATEGORY: [DialogCategory; 75] = [
  DialogCategory::Cafe,
  DialogCategory::Echelon,
  DialogCategory::CharacterSSRNew,
  DialogCategory::CharacterGet,
  DialogCategory::Birthday,
  DialogCategory::Dating,
  DialogCategory::Title,
  DialogCategory::UILobby,
  DialogCategory::UILobbySpecial,
  DialogCategory::UIShop,
  DialogCategory::UIGacha,
  DialogCategory::UIRaidLobby,
  DialogCategory::UIWork,
  DialogCategory::UITitle,
  DialogCategory::UIWeekDungeon,
  DialogCategory::UIAcademyLobby,
  DialogCategory::UIRaidLobbySeasonOff,
  DialogCategory::UIRaidLobbySeasonOn,
  DialogCategory::UIWorkAronaSit,
  DialogCategory::UIWorkAronaSleep,
  DialogCategory::UIWorkAronaWatch,
  DialogCategory::UIGuideMission,
  DialogCategory::UILobby2,
  DialogCategory::UIClanSearchList,
  DialogCategory::UIAttendance,
  DialogCategory::UIAttendanceEvent01,
  DialogCategory::UIEventLobby,
  DialogCategory::UIEventShop,
  DialogCategory::UIEventBoxGachaShop,
  DialogCategory::UIAttendanceEvent02,
  DialogCategory::UIAttendanceEvent03,
  DialogCategory::UIEventCardShop,
  DialogCategory::UISchoolDungeon,
  DialogCategory::UIAttendanceEvent,
  DialogCategory::UISpecialOperationLobby,
  DialogCategory::WeaponGet,
  DialogCategory::UIAttendanceEvent04,
  DialogCategory::UIEventFortuneGachaShop,
  DialogCategory::UIAttendanceEvent05,
  DialogCategory::UIAttendanceEvent06,
  DialogCategory::UIMission,
  DialogCategory::UIEventMission,
  DialogCategory::UIAttendanceEvent08,
  DialogCategory::UIAttendanceEvent07,
  DialogCategory::UIEventMiniGameMission,
  DialogCategory::UIAttendanceEvent09,
  DialogCategory::UIAttendanceEvent10,
  DialogCategory::UIAttendanceEvent11,
  DialogCategory::UIWorkPlanaSit,
  DialogCategory::UIWorkPlanaUmbrella,
  DialogCategory::UIWorkPlanaCabinet,
  DialogCategory::UIWorkCoexist_AronaSleepSit,
  DialogCategory::UIWorkCoexist_PlanaWatchSky,
  DialogCategory::UIWorkCoexist_PlanaSitPeek,
  DialogCategory::UIWorkCoexist_AronaSleepPeek,
  DialogCategory::UIEventArchive,
  DialogCategory::UIAttendanceEvent12,
  DialogCategory::UIAttendanceEvent13,
  DialogCategory::UIAttendanceEvent14,
  DialogCategory::Temp_1,
  DialogCategory::Temp_2,
  DialogCategory::Temp_3,
  DialogCategory::Temp_4,
  DialogCategory::Temp_5,
  DialogCategory::UIAttendanceEvent15,
  DialogCategory::UILobbySpecial2,
  DialogCategory::UIAttendanceEvent16,
  DialogCategory::UIEventTreasure,
  DialogCategory::UIMultiFloorRaid,
  DialogCategory::UIEventMiniGameDreamMaker,
  DialogCategory::UIAttendanceEvent17,
  DialogCategory::UIAttendanceEvent18,
  DialogCategory::UIBattlePassLobby,
  DialogCategory::UIBattlePassMission,
  DialogCategory::UIAttendanceEvent19,
];

#[derive(Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash, Default)]
#[repr(transparent)]
pub struct DialogCategory(pub i32);
#[allow(non_upper_case_globals)]
impl DialogCategory {
  pub const Cafe: Self = Self(0);
  pub const Echelon: Self = Self(1);
  pub const CharacterSSRNew: Self = Self(2);
  pub const CharacterGet: Self = Self(3);
  pub const Birthday: Self = Self(4);
  pub const Dating: Self = Self(5);
  pub const Title: Self = Self(6);
  pub const UILobby: Self = Self(7);
  pub const UILobbySpecial: Self = Self(8);
  pub const UIShop: Self = Self(9);
  pub const UIGacha: Self = Self(10);
  pub const UIRaidLobby: Self = Self(11);
  pub const UIWork: Self = Self(12);
  pub const UITitle: Self = Self(13);
  pub const UIWeekDungeon: Self = Self(14);
  pub const UIAcademyLobby: Self = Self(15);
  pub const UIRaidLobbySeasonOff: Self = Self(16);
  pub const UIRaidLobbySeasonOn: Self = Self(17);
  pub const UIWorkAronaSit: Self = Self(18);
  pub const UIWorkAronaSleep: Self = Self(19);
  pub const UIWorkAronaWatch: Self = Self(20);
  pub const UIGuideMission: Self = Self(21);
  pub const UILobby2: Self = Self(22);
  pub const UIClanSearchList: Self = Self(23);
  pub const UIAttendance: Self = Self(24);
  pub const UIAttendanceEvent01: Self = Self(25);
  pub const UIEventLobby: Self = Self(26);
  pub const UIEventShop: Self = Self(27);
  pub const UIEventBoxGachaShop: Self = Self(28);
  pub const UIAttendanceEvent02: Self = Self(29);
  pub const UIAttendanceEvent03: Self = Self(30);
  pub const UIEventCardShop: Self = Self(31);
  pub const UISchoolDungeon: Self = Self(32);
  pub const UIAttendanceEvent: Self = Self(33);
  pub const UISpecialOperationLobby: Self = Self(34);
  pub const WeaponGet: Self = Self(35);
  pub const UIAttendanceEvent04: Self = Self(36);
  pub const UIEventFortuneGachaShop: Self = Self(37);
  pub const UIAttendanceEvent05: Self = Self(38);
  pub const UIAttendanceEvent06: Self = Self(39);
  pub const UIMission: Self = Self(40);
  pub const UIEventMission: Self = Self(41);
  pub const UIAttendanceEvent08: Self = Self(42);
  pub const UIAttendanceEvent07: Self = Self(43);
  pub const UIEventMiniGameMission: Self = Self(44);
  pub const UIAttendanceEvent09: Self = Self(45);
  pub const UIAttendanceEvent10: Self = Self(46);
  pub const UIAttendanceEvent11: Self = Self(47);
  pub const UIWorkPlanaSit: Self = Self(48);
  pub const UIWorkPlanaUmbrella: Self = Self(49);
  pub const UIWorkPlanaCabinet: Self = Self(50);
  pub const UIWorkCoexist_AronaSleepSit: Self = Self(51);
  pub const UIWorkCoexist_PlanaWatchSky: Self = Self(52);
  pub const UIWorkCoexist_PlanaSitPeek: Self = Self(53);
  pub const UIWorkCoexist_AronaSleepPeek: Self = Self(54);
  pub const UIEventArchive: Self = Self(55);
  pub const UIAttendanceEvent12: Self = Self(56);
  pub const UIAttendanceEvent13: Self = Self(57);
  pub const UIAttendanceEvent14: Self = Self(58);
  pub const Temp_1: Self = Self(59);
  pub const Temp_2: Self = Self(60);
  pub const Temp_3: Self = Self(61);
  pub const Temp_4: Self = Self(62);
  pub const Temp_5: Self = Self(63);
  pub const UIAttendanceEvent15: Self = Self(64);
  pub const UILobbySpecial2: Self = Self(65);
  pub const UIAttendanceEvent16: Self = Self(66);
  pub const UIEventTreasure: Self = Self(67);
  pub const UIMultiFloorRaid: Self = Self(68);
  pub const UIEventMiniGameDreamMaker: Self = Self(69);
  pub const UIAttendanceEvent17: Self = Self(70);
  pub const UIAttendanceEvent18: Self = Self(71);
  pub const UIBattlePassLobby: Self = Self(72);
  pub const UIBattlePassMission: Self = Self(73);
  pub const UIAttendanceEvent19: Self = Self(74);

  pub const ENUM_MIN: i32 = 0;
  pub const ENUM_MAX: i32 = 74;
  pub const ENUM_VALUES: &'static [Self] = &[
    Self::Cafe,
    Self::Echelon,
    Self::CharacterSSRNew,
    Self::CharacterGet,
    Self::Birthday,
    Self::Dating,
    Self::Title,
    Self::UILobby,
    Self::UILobbySpecial,
    Self::UIShop,
    Self::UIGacha,
    Self::UIRaidLobby,
    Self::UIWork,
    Self::UITitle,
    Self::UIWeekDungeon,
    Self::UIAcademyLobby,
    Self::UIRaidLobbySeasonOff,
    Self::UIRaidLobbySeasonOn,
    Self::UIWorkAronaSit,
    Self::UIWorkAronaSleep,
    Self::UIWorkAronaWatch,
    Self::UIGuideMission,
    Self::UILobby2,
    Self::UIClanSearchList,
    Self::UIAttendance,
    Self::UIAttendanceEvent01,
    Self::UIEventLobby,
    Self::UIEventShop,
    Self::UIEventBoxGachaShop,
    Self::UIAttendanceEvent02,
    Self::UIAttendanceEvent03,
    Self::UIEventCardShop,
    Self::UISchoolDungeon,
    Self::UIAttendanceEvent,
    Self::UISpecialOperationLobby,
    Self::WeaponGet,
    Self::UIAttendanceEvent04,
    Self::UIEventFortuneGachaShop,
    Self::UIAttendanceEvent05,
    Self::UIAttendanceEvent06,
    Self::UIMission,
    Self::UIEventMission,
    Self::UIAttendanceEvent08,
    Self::UIAttendanceEvent07,
    Self::UIEventMiniGameMission,
    Self::UIAttendanceEvent09,
    Self::UIAttendanceEvent10,
    Self::UIAttendanceEvent11,
    Self::UIWorkPlanaSit,
    Self::UIWorkPlanaUmbrella,
    Self::UIWorkPlanaCabinet,
    Self::UIWorkCoexist_AronaSleepSit,
    Self::UIWorkCoexist_PlanaWatchSky,
    Self::UIWorkCoexist_PlanaSitPeek,
    Self::UIWorkCoexist_AronaSleepPeek,
    Self::UIEventArchive,
    Self::UIAttendanceEvent12,
    Self::UIAttendanceEvent13,
    Self::UIAttendanceEvent14,
    Self::Temp_1,
    Self::Temp_2,
    Self::Temp_3,
    Self::Temp_4,
    Self::Temp_5,
    Self::UIAttendanceEvent15,
    Self::UILobbySpecial2,
    Self::UIAttendanceEvent16,
    Self::UIEventTreasure,
    Self::UIMultiFloorRaid,
    Self::UIEventMiniGameDreamMaker,
    Self::UIAttendanceEvent17,
    Self::UIAttendanceEvent18,
    Self::UIBattlePassLobby,
    Self::UIBattlePassMission,
    Self::UIAttendanceEvent19,
  ];
  /// Returns the variant's name or "" if unknown.
  pub fn variant_name(self) -> Option<&'static str> {
    match self {
      Self::Cafe => Some("Cafe"),
      Self::Echelon => Some("Echelon"),
      Self::CharacterSSRNew => Some("CharacterSSRNew"),
      Self::CharacterGet => Some("CharacterGet"),
      Self::Birthday => Some("Birthday"),
      Self::Dating => Some("Dating"),
      Self::Title => Some("Title"),
      Self::UILobby => Some("UILobby"),
      Self::UILobbySpecial => Some("UILobbySpecial"),
      Self::UIShop => Some("UIShop"),
      Self::UIGacha => Some("UIGacha"),
      Self::UIRaidLobby => Some("UIRaidLobby"),
      Self::UIWork => Some("UIWork"),
      Self::UITitle => Some("UITitle"),
      Self::UIWeekDungeon => Some("UIWeekDungeon"),
      Self::UIAcademyLobby => Some("UIAcademyLobby"),
      Self::UIRaidLobbySeasonOff => Some("UIRaidLobbySeasonOff"),
      Self::UIRaidLobbySeasonOn => Some("UIRaidLobbySeasonOn"),
      Self::UIWorkAronaSit => Some("UIWorkAronaSit"),
      Self::UIWorkAronaSleep => Some("UIWorkAronaSleep"),
      Self::UIWorkAronaWatch => Some("UIWorkAronaWatch"),
      Self::UIGuideMission => Some("UIGuideMission"),
      Self::UILobby2 => Some("UILobby2"),
      Self::UIClanSearchList => Some("UIClanSearchList"),
      Self::UIAttendance => Some("UIAttendance"),
      Self::UIAttendanceEvent01 => Some("UIAttendanceEvent01"),
      Self::UIEventLobby => Some("UIEventLobby"),
      Self::UIEventShop => Some("UIEventShop"),
      Self::UIEventBoxGachaShop => Some("UIEventBoxGachaShop"),
      Self::UIAttendanceEvent02 => Some("UIAttendanceEvent02"),
      Self::UIAttendanceEvent03 => Some("UIAttendanceEvent03"),
      Self::UIEventCardShop => Some("UIEventCardShop"),
      Self::UISchoolDungeon => Some("UISchoolDungeon"),
      Self::UIAttendanceEvent => Some("UIAttendanceEvent"),
      Self::UISpecialOperationLobby => Some("UISpecialOperationLobby"),
      Self::WeaponGet => Some("WeaponGet"),
      Self::UIAttendanceEvent04 => Some("UIAttendanceEvent04"),
      Self::UIEventFortuneGachaShop => Some("UIEventFortuneGachaShop"),
      Self::UIAttendanceEvent05 => Some("UIAttendanceEvent05"),
      Self::UIAttendanceEvent06 => Some("UIAttendanceEvent06"),
      Self::UIMission => Some("UIMission"),
      Self::UIEventMission => Some("UIEventMission"),
      Self::UIAttendanceEvent08 => Some("UIAttendanceEvent08"),
      Self::UIAttendanceEvent07 => Some("UIAttendanceEvent07"),
      Self::UIEventMiniGameMission => Some("UIEventMiniGameMission"),
      Self::UIAttendanceEvent09 => Some("UIAttendanceEvent09"),
      Self::UIAttendanceEvent10 => Some("UIAttendanceEvent10"),
      Self::UIAttendanceEvent11 => Some("UIAttendanceEvent11"),
      Self::UIWorkPlanaSit => Some("UIWorkPlanaSit"),
      Self::UIWorkPlanaUmbrella => Some("UIWorkPlanaUmbrella"),
      Self::UIWorkPlanaCabinet => Some("UIWorkPlanaCabinet"),
      Self::UIWorkCoexist_AronaSleepSit => Some("UIWorkCoexist_AronaSleepSit"),
      Self::UIWorkCoexist_PlanaWatchSky => Some("UIWorkCoexist_PlanaWatchSky"),
      Self::UIWorkCoexist_PlanaSitPeek => Some("UIWorkCoexist_PlanaSitPeek"),
      Self::UIWorkCoexist_AronaSleepPeek => Some("UIWorkCoexist_AronaSleepPeek"),
      Self::UIEventArchive => Some("UIEventArchive"),
      Self::UIAttendanceEvent12 => Some("UIAttendanceEvent12"),
      Self::UIAttendanceEvent13 => Some("UIAttendanceEvent13"),
      Self::UIAttendanceEvent14 => Some("UIAttendanceEvent14"),
      Self::Temp_1 => Some("Temp_1"),
      Self::Temp_2 => Some("Temp_2"),
      Self::Temp_3 => Some("Temp_3"),
      Self::Temp_4 => Some("Temp_4"),
      Self::Temp_5 => Some("Temp_5"),
      Self::UIAttendanceEvent15 => Some("UIAttendanceEvent15"),
      Self::UILobbySpecial2 => Some("UILobbySpecial2"),
      Self::UIAttendanceEvent16 => Some("UIAttendanceEvent16"),
      Self::UIEventTreasure => Some("UIEventTreasure"),
      Self::UIMultiFloorRaid => Some("UIMultiFloorRaid"),
      Self::UIEventMiniGameDreamMaker => Some("UIEventMiniGameDreamMaker"),
      Self::UIAttendanceEvent17 => Some("UIAttendanceEvent17"),
      Self::UIAttendanceEvent18 => Some("UIAttendanceEvent18"),
      Self::UIBattlePassLobby => Some("UIBattlePassLobby"),
      Self::UIBattlePassMission => Some("UIBattlePassMission"),
      Self::UIAttendanceEvent19 => Some("UIAttendanceEvent19"),
      _ => None,
    }
  }
}
impl core::fmt::Debug for DialogCategory {
  fn fmt(&self, f: &mut core::fmt::Formatter) -> core::fmt::Result {
    if let Some(name) = self.variant_name() {
      f.write_str(name)
    } else {
      f.write_fmt(format_args!("<UNKNOWN {:?}>", self.0))
    }
  }
}
impl Serialize for DialogCategory {
  fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>
  where
    S: Serializer,
  {
    serializer.serialize_unit_variant("DialogCategory", self.0 as u32, self.variant_name().unwrap())
  }
}

impl<'a> flatbuffers::Follow<'a> for DialogCategory {
  type Inner = Self;
  #[inline]
  unsafe fn follow(buf: &'a [u8], loc: usize) -> Self::Inner {
    let b = flatbuffers::read_scalar_at::<i32>(buf, loc);
    Self(b)
  }
}

impl flatbuffers::Push for DialogCategory {
    type Output = DialogCategory;
    #[inline]
    unsafe fn push(&self, dst: &mut [u8], _written_len: usize) {
        flatbuffers::emplace_scalar::<i32>(dst, self.0);
    }
}

impl flatbuffers::EndianScalar for DialogCategory {
  type Scalar = i32;
  #[inline]
  fn to_little_endian(self) -> i32 {
    self.0.to_le()
  }
  #[inline]
  #[allow(clippy::wrong_self_convention)]
  fn from_little_endian(v: i32) -> Self {
    let b = i32::from_le(v);
    Self(b)
  }
}

impl<'a> flatbuffers::Verifiable for DialogCategory {
  #[inline]
  fn run_verifier(
    v: &mut flatbuffers::Verifier, pos: usize
  ) -> Result<(), flatbuffers::InvalidFlatbuffer> {
    use self::flatbuffers::Verifiable;
    i32::run_verifier(v, pos)
  }
}

impl flatbuffers::SimpleToVerifyInSlice for DialogCategory {}
