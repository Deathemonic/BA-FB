// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Japan
{

using global::System;
using global::System.Collections.Generic;
using global::Kuroko.Crypto;
using global::Google.FlatBuffers;

public struct CampaignStageRewardExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static CampaignStageRewardExcel GetRootAsCampaignStageRewardExcel(ByteBuffer _bb) { return GetRootAsCampaignStageRewardExcel(_bb, new CampaignStageRewardExcel()); }
  public static CampaignStageRewardExcel GetRootAsCampaignStageRewardExcel(ByteBuffer _bb, CampaignStageRewardExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CampaignStageRewardExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long GroupId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public Japan.RewardTag RewardTag { get { int o = __p.__offset(6); return o != 0 ? (Japan.RewardTag)__p.bb.GetInt(o + __p.bb_pos) : Japan.RewardTag.Default; } }
  public int StageRewardProb { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public Japan.ParcelType StageRewardParcelType { get { int o = __p.__offset(10); return o != 0 ? (Japan.ParcelType)__p.bb.GetInt(o + __p.bb_pos) : Japan.ParcelType.None; } }
  public long StageRewardId { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public int StageRewardAmount { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool IsDisplayed { get { int o = __p.__offset(16); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<Japan.CampaignStageRewardExcel> CreateCampaignStageRewardExcel(FlatBufferBuilder builder,
      long GroupId = 0,
      Japan.RewardTag RewardTag = Japan.RewardTag.Default,
      int StageRewardProb = 0,
      Japan.ParcelType StageRewardParcelType = Japan.ParcelType.None,
      long StageRewardId = 0,
      int StageRewardAmount = 0,
      bool IsDisplayed = false) {
    builder.StartTable(7);
    CampaignStageRewardExcel.AddStageRewardId(builder, StageRewardId);
    CampaignStageRewardExcel.AddGroupId(builder, GroupId);
    CampaignStageRewardExcel.AddStageRewardAmount(builder, StageRewardAmount);
    CampaignStageRewardExcel.AddStageRewardParcelType(builder, StageRewardParcelType);
    CampaignStageRewardExcel.AddStageRewardProb(builder, StageRewardProb);
    CampaignStageRewardExcel.AddRewardTag(builder, RewardTag);
    CampaignStageRewardExcel.AddIsDisplayed(builder, IsDisplayed);
    return CampaignStageRewardExcel.EndCampaignStageRewardExcel(builder);
  }

  public static void StartCampaignStageRewardExcel(FlatBufferBuilder builder) { builder.StartTable(7); }
  public static void AddGroupId(FlatBufferBuilder builder, long groupId) { builder.AddLong(0, groupId, 0); }
  public static void AddRewardTag(FlatBufferBuilder builder, Japan.RewardTag rewardTag) { builder.AddInt(1, (int)rewardTag, 0); }
  public static void AddStageRewardProb(FlatBufferBuilder builder, int stageRewardProb) { builder.AddInt(2, stageRewardProb, 0); }
  public static void AddStageRewardParcelType(FlatBufferBuilder builder, Japan.ParcelType stageRewardParcelType) { builder.AddInt(3, (int)stageRewardParcelType, 0); }
  public static void AddStageRewardId(FlatBufferBuilder builder, long stageRewardId) { builder.AddLong(4, stageRewardId, 0); }
  public static void AddStageRewardAmount(FlatBufferBuilder builder, int stageRewardAmount) { builder.AddInt(5, stageRewardAmount, 0); }
  public static void AddIsDisplayed(FlatBufferBuilder builder, bool isDisplayed) { builder.AddBool(6, isDisplayed, false); }
  public static Offset<Japan.CampaignStageRewardExcel> EndCampaignStageRewardExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Japan.CampaignStageRewardExcel>(o);
  }
  public CampaignStageRewardExcelT UnPack() {
    var _o = new CampaignStageRewardExcelT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CampaignStageRewardExcelT _o) {
		byte[] key = TableEncryptionService.CreateKey("CampaignStageReward");
    _o.GroupId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)this.GroupId, key) : this.GroupId;
    _o.RewardTag = TableEncryptionService.UseEncryption ? (Japan.RewardTag)TableEncryptionService.Convert((int)this.RewardTag, key) : this.RewardTag;
    _o.StageRewardProb = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((int)this.StageRewardProb, key) : this.StageRewardProb;
    _o.StageRewardParcelType = TableEncryptionService.UseEncryption ? (Japan.ParcelType)TableEncryptionService.Convert((int)this.StageRewardParcelType, key) : this.StageRewardParcelType;
    _o.StageRewardId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)this.StageRewardId, key) : this.StageRewardId;
    _o.StageRewardAmount = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((int)this.StageRewardAmount, key) : this.StageRewardAmount;
    _o.IsDisplayed = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((bool)this.IsDisplayed, key) : this.IsDisplayed;
  }
  public static Offset<Japan.CampaignStageRewardExcel> Pack(FlatBufferBuilder builder, CampaignStageRewardExcelT _o) {
    if (_o == null) return default(Offset<Japan.CampaignStageRewardExcel>);
		byte[] key = TableEncryptionService.CreateKey("CampaignStageReward");
		var _GroupId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)_o.GroupId, key) : _o.GroupId;
		var _RewardTag = TableEncryptionService.UseEncryption ? (Japan.RewardTag)TableEncryptionService.Convert((int)_o.RewardTag, key) : _o.RewardTag;
		var _StageRewardProb = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((int)_o.StageRewardProb, key) : _o.StageRewardProb;
		var _StageRewardParcelType = TableEncryptionService.UseEncryption ? (Japan.ParcelType)TableEncryptionService.Convert((int)_o.StageRewardParcelType, key) : _o.StageRewardParcelType;
		var _StageRewardId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)_o.StageRewardId, key) : _o.StageRewardId;
		var _StageRewardAmount = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((int)_o.StageRewardAmount, key) : _o.StageRewardAmount;
		var _IsDisplayed = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((bool)_o.IsDisplayed, key) : _o.IsDisplayed;
    return CreateCampaignStageRewardExcel(
      builder,
      TableEncryptionService.UseEncryption ? _GroupId : _o.GroupId,
      TableEncryptionService.UseEncryption ? _RewardTag : _o.RewardTag,
      TableEncryptionService.UseEncryption ? _StageRewardProb : _o.StageRewardProb,
      TableEncryptionService.UseEncryption ? _StageRewardParcelType : _o.StageRewardParcelType,
      TableEncryptionService.UseEncryption ? _StageRewardId : _o.StageRewardId,
      TableEncryptionService.UseEncryption ? _StageRewardAmount : _o.StageRewardAmount,
      TableEncryptionService.UseEncryption ? _IsDisplayed : _o.IsDisplayed);
  }
}

public class CampaignStageRewardExcelT
{
  public long GroupId { get; set; }
  public Japan.RewardTag RewardTag { get; set; }
  public int StageRewardProb { get; set; }
  public Japan.ParcelType StageRewardParcelType { get; set; }
  public long StageRewardId { get; set; }
  public int StageRewardAmount { get; set; }
  public bool IsDisplayed { get; set; }

  public CampaignStageRewardExcelT() {
    this.GroupId = 0;
    this.RewardTag = Japan.RewardTag.Default;
    this.StageRewardProb = 0;
    this.StageRewardParcelType = Japan.ParcelType.None;
    this.StageRewardId = 0;
    this.StageRewardAmount = 0;
    this.IsDisplayed = false;
  }
}


static public class CampaignStageRewardExcelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*GroupId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 6 /*RewardTag*/, 4 /*Japan.RewardTag*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*StageRewardProb*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*StageRewardParcelType*/, 4 /*Japan.ParcelType*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*StageRewardId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 14 /*StageRewardAmount*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 16 /*IsDisplayed*/, 1 /*bool*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
