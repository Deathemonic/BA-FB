// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Japan
{

using global::System;
using global::System.Collections.Generic;
using global::Kuroko.Crypto;
using global::Google.FlatBuffers;

public struct Form : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static Form GetRootAsForm(ByteBuffer _bb) { return GetRootAsForm(_bb, new Form()); }
  public static Form GetRootAsForm(ByteBuffer _bb, Form obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Form __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Japan.MoveEnd? MoveEndOffset { get { int o = __p.__offset(4); return o != 0 ? (Japan.MoveEnd?)(new Japan.MoveEnd()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Japan.Motion? PublicSkillOffset { get { int o = __p.__offset(6); return o != 0 ? (Japan.Motion?)(new Japan.Motion()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<Japan.Form> CreateForm(FlatBufferBuilder builder,
      Offset<Japan.MoveEnd> MoveEndOffsetOffset = default(Offset<Japan.MoveEnd>),
      Offset<Japan.Motion> PublicSkillOffsetOffset = default(Offset<Japan.Motion>)) {
    builder.StartTable(2);
    Form.AddPublicSkillOffset(builder, PublicSkillOffsetOffset);
    Form.AddMoveEndOffset(builder, MoveEndOffsetOffset);
    return Form.EndForm(builder);
  }

  public static void StartForm(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddMoveEndOffset(FlatBufferBuilder builder, Offset<Japan.MoveEnd> moveEndOffsetOffset) { builder.AddOffset(0, moveEndOffsetOffset.Value, 0); }
  public static void AddPublicSkillOffset(FlatBufferBuilder builder, Offset<Japan.Motion> publicSkillOffsetOffset) { builder.AddOffset(1, publicSkillOffsetOffset.Value, 0); }
  public static Offset<Japan.Form> EndForm(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Japan.Form>(o);
  }
  public FormT UnPack() {
    var _o = new FormT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(FormT _o) {
		byte[] key = TableEncryptionService.CreateKey("FormT");
    _o.MoveEndOffset = this.MoveEndOffset.HasValue ? this.MoveEndOffset.Value.UnPack() : null;
    _o.PublicSkillOffset = this.PublicSkillOffset.HasValue ? this.PublicSkillOffset.Value.UnPack() : null;
  }
  public static Offset<Japan.Form> Pack(FlatBufferBuilder builder, FormT _o) {
    if (_o == null) return default(Offset<Japan.Form>);
		byte[] key = TableEncryptionService.CreateKey("FormT");
    var _MoveEndOffset = _o.MoveEndOffset == null ? default(Offset<Japan.MoveEnd>) : Japan.MoveEnd.Pack(builder, _o.MoveEndOffset);
    var _PublicSkillOffset = _o.PublicSkillOffset == null ? default(Offset<Japan.Motion>) : Japan.Motion.Pack(builder, _o.PublicSkillOffset);
    return CreateForm(
      builder,
      _MoveEndOffset,
      _PublicSkillOffset);
  }
}

public class FormT
{
  public Japan.MoveEndT MoveEndOffset { get; set; }
  public Japan.MotionT PublicSkillOffset { get; set; }

  public FormT() {
    this.MoveEndOffset = null;
    this.PublicSkillOffset = null;
  }
}


static public class FormVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyTable(tablePos, 4 /*MoveEndOffset*/, Japan.MoveEndVerify.Verify, false)
      && verifier.VerifyTable(tablePos, 6 /*PublicSkillOffset*/, Japan.MotionVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
