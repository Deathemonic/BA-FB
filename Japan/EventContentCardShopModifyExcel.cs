// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Japan
{

using global::System;
using global::System.Collections.Generic;
using global::Kuroko.Crypto;
using global::Google.FlatBuffers;

public struct EventContentCardShopModifyExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static EventContentCardShopModifyExcel GetRootAsEventContentCardShopModifyExcel(ByteBuffer _bb) { return GetRootAsEventContentCardShopModifyExcel(_bb, new EventContentCardShopModifyExcel()); }
  public static EventContentCardShopModifyExcel GetRootAsEventContentCardShopModifyExcel(ByteBuffer _bb, EventContentCardShopModifyExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EventContentCardShopModifyExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long EventContentId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public string UsePrefabName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetUsePrefabNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetUsePrefabNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetUsePrefabNameArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<Japan.EventContentCardShopModifyExcel> CreateEventContentCardShopModifyExcel(FlatBufferBuilder builder,
      long EventContentId = 0,
      StringOffset UsePrefabNameOffset = default(StringOffset)) {
    builder.StartTable(2);
    EventContentCardShopModifyExcel.AddEventContentId(builder, EventContentId);
    EventContentCardShopModifyExcel.AddUsePrefabName(builder, UsePrefabNameOffset);
    return EventContentCardShopModifyExcel.EndEventContentCardShopModifyExcel(builder);
  }

  public static void StartEventContentCardShopModifyExcel(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddEventContentId(FlatBufferBuilder builder, long eventContentId) { builder.AddLong(0, eventContentId, 0); }
  public static void AddUsePrefabName(FlatBufferBuilder builder, StringOffset usePrefabNameOffset) { builder.AddOffset(1, usePrefabNameOffset.Value, 0); }
  public static Offset<Japan.EventContentCardShopModifyExcel> EndEventContentCardShopModifyExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Japan.EventContentCardShopModifyExcel>(o);
  }
  public EventContentCardShopModifyExcelT UnPack() {
    var _o = new EventContentCardShopModifyExcelT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(EventContentCardShopModifyExcelT _o) {
		byte[] key = TableEncryptionService.CreateKey("EventContentCardShopModify");
    _o.EventContentId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)this.EventContentId, key) : this.EventContentId;
    _o.UsePrefabName = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert(this.UsePrefabName, key) : this.UsePrefabName;
  }
  public static Offset<Japan.EventContentCardShopModifyExcel> Pack(FlatBufferBuilder builder, EventContentCardShopModifyExcelT _o) {
    if (_o == null) return default(Offset<Japan.EventContentCardShopModifyExcel>);
		byte[] key = TableEncryptionService.CreateKey("EventContentCardShopModify");
		var _EventContentId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)_o.EventContentId, key) : _o.EventContentId;
    var _UsePrefabName = _o.UsePrefabName == null ? default(StringOffset) : builder.CreateString((TableEncryptionService.UseEncryption ? TableEncryptionService.ConvertPack((string)_o.UsePrefabName, key) : _o.UsePrefabName));
    return CreateEventContentCardShopModifyExcel(
      builder,
      TableEncryptionService.UseEncryption ? _EventContentId : _o.EventContentId,
      _UsePrefabName);
  }
}

public class EventContentCardShopModifyExcelT
{
  public long EventContentId { get; set; }
  public string UsePrefabName { get; set; }

  public EventContentCardShopModifyExcelT() {
    this.EventContentId = 0;
    this.UsePrefabName = null;
  }
}


static public class EventContentCardShopModifyExcelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*EventContentId*/, 8 /*long*/, 8, false)
      && verifier.VerifyString(tablePos, 6 /*UsePrefabName*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
