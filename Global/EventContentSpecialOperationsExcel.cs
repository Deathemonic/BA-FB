// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Global
{

using global::System;
using global::System.Collections.Generic;
using global::Kuroko.Crypto;
using global::Google.FlatBuffers;

public struct EventContentSpecialOperationsExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static EventContentSpecialOperationsExcel GetRootAsEventContentSpecialOperationsExcel(ByteBuffer _bb) { return GetRootAsEventContentSpecialOperationsExcel(_bb, new EventContentSpecialOperationsExcel()); }
  public static EventContentSpecialOperationsExcel GetRootAsEventContentSpecialOperationsExcel(ByteBuffer _bb, EventContentSpecialOperationsExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EventContentSpecialOperationsExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long EventContentId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long PointItemId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<Global.EventContentSpecialOperationsExcel> CreateEventContentSpecialOperationsExcel(FlatBufferBuilder builder,
      long EventContentId = 0,
      long PointItemId = 0) {
    builder.StartTable(2);
    EventContentSpecialOperationsExcel.AddPointItemId(builder, PointItemId);
    EventContentSpecialOperationsExcel.AddEventContentId(builder, EventContentId);
    return EventContentSpecialOperationsExcel.EndEventContentSpecialOperationsExcel(builder);
  }

  public static void StartEventContentSpecialOperationsExcel(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddEventContentId(FlatBufferBuilder builder, long eventContentId) { builder.AddLong(0, eventContentId, 0); }
  public static void AddPointItemId(FlatBufferBuilder builder, long pointItemId) { builder.AddLong(1, pointItemId, 0); }
  public static Offset<Global.EventContentSpecialOperationsExcel> EndEventContentSpecialOperationsExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Global.EventContentSpecialOperationsExcel>(o);
  }
  public EventContentSpecialOperationsExcelT UnPack() {
    var _o = new EventContentSpecialOperationsExcelT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(EventContentSpecialOperationsExcelT _o) {
		byte[] key = TableEncryptionService.CreateKey("EventContentSpecialOperations");
    _o.EventContentId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)this.EventContentId, key) : this.EventContentId;
    _o.PointItemId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)this.PointItemId, key) : this.PointItemId;
  }
  public static Offset<Global.EventContentSpecialOperationsExcel> Pack(FlatBufferBuilder builder, EventContentSpecialOperationsExcelT _o) {
    if (_o == null) return default(Offset<Global.EventContentSpecialOperationsExcel>);
		byte[] key = TableEncryptionService.CreateKey("EventContentSpecialOperations");
		var _EventContentId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)_o.EventContentId, key) : _o.EventContentId;
		var _PointItemId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)_o.PointItemId, key) : _o.PointItemId;
    return CreateEventContentSpecialOperationsExcel(
      builder,
      TableEncryptionService.UseEncryption ? _EventContentId : _o.EventContentId,
      TableEncryptionService.UseEncryption ? _PointItemId : _o.PointItemId);
  }
}

public class EventContentSpecialOperationsExcelT
{
  public long EventContentId { get; set; }
  public long PointItemId { get; set; }

  public EventContentSpecialOperationsExcelT() {
    this.EventContentId = 0;
    this.PointItemId = 0;
  }
}


static public class EventContentSpecialOperationsExcelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*EventContentId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 6 /*PointItemId*/, 8 /*long*/, 8, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
