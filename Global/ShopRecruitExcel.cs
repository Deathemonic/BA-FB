// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Global
{

using global::System;
using global::System.Collections.Generic;
using global::Kuroko.Crypto;
using global::Google.FlatBuffers;

public struct ShopRecruitExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static ShopRecruitExcel GetRootAsShopRecruitExcel(ByteBuffer _bb) { return GetRootAsShopRecruitExcel(_bb, new ShopRecruitExcel()); }
  public static ShopRecruitExcel GetRootAsShopRecruitExcel(ByteBuffer _bb, ShopRecruitExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ShopRecruitExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public Global.ShopCategoryType CategoryType { get { int o = __p.__offset(6); return o != 0 ? (Global.ShopCategoryType)__p.bb.GetInt(o + __p.bb_pos) : Global.ShopCategoryType.General; } }
  public bool IsLegacy { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public long OneGachaGoodsId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long TenGachaGoodsId { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public string GoodsDevName { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGoodsDevNameBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetGoodsDevNameBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetGoodsDevNameArray() { return __p.__vector_as_array<byte>(14); }
  public Global.GachaDisplayTag DisplayTag { get { int o = __p.__offset(16); return o != 0 ? (Global.GachaDisplayTag)__p.bb.GetInt(o + __p.bb_pos) : Global.GachaDisplayTag.None; } }
  public long DisplayOrder { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public string GachaBannerPath { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGachaBannerPathBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetGachaBannerPathBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetGachaBannerPathArray() { return __p.__vector_as_array<byte>(20); }
  public long VideoId(int j) { int o = __p.__offset(22); return o != 0 ? __p.bb.GetLong(__p.__vector(o) + j * 8) : (long)0; }
  public int VideoIdLength { get { int o = __p.__offset(22); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<long> GetVideoIdBytes() { return __p.__vector_as_span<long>(22, 8); }
#else
  public ArraySegment<byte>? GetVideoIdBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public long[] GetVideoIdArray() { return __p.__vector_as_array<long>(22); }
  public long LinkedRobbyBannerId { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long InfoCharacterId(int j) { int o = __p.__offset(26); return o != 0 ? __p.bb.GetLong(__p.__vector(o) + j * 8) : (long)0; }
  public int InfoCharacterIdLength { get { int o = __p.__offset(26); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<long> GetInfoCharacterIdBytes() { return __p.__vector_as_span<long>(26, 8); }
#else
  public ArraySegment<byte>? GetInfoCharacterIdBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public long[] GetInfoCharacterIdArray() { return __p.__vector_as_array<long>(26); }
  public bool SalePeriodVisible { get { int o = __p.__offset(28); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public string SalePeriodFrom { get { int o = __p.__offset(30); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSalePeriodFromBytes() { return __p.__vector_as_span<byte>(30, 1); }
#else
  public ArraySegment<byte>? GetSalePeriodFromBytes() { return __p.__vector_as_arraysegment(30); }
#endif
  public byte[] GetSalePeriodFromArray() { return __p.__vector_as_array<byte>(30); }
  public string SalePeriodTo { get { int o = __p.__offset(32); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSalePeriodToBytes() { return __p.__vector_as_span<byte>(32, 1); }
#else
  public ArraySegment<byte>? GetSalePeriodToBytes() { return __p.__vector_as_arraysegment(32); }
#endif
  public byte[] GetSalePeriodToArray() { return __p.__vector_as_array<byte>(32); }
  public long RecruitCoinId { get { int o = __p.__offset(34); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long RecruitSellectionShopId { get { int o = __p.__offset(36); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long PurchaseCooltimeMin { get { int o = __p.__offset(38); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long PurchaseCountLimit { get { int o = __p.__offset(40); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public Global.PurchaseCountResetType PurchaseCountResetType { get { int o = __p.__offset(42); return o != 0 ? (Global.PurchaseCountResetType)__p.bb.GetInt(o + __p.bb_pos) : Global.PurchaseCountResetType.None; } }
  public bool IsNewbie { get { int o = __p.__offset(44); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool IsSelectRecruit { get { int o = __p.__offset(46); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public long DirectPayInvisibleTokenId { get { int o = __p.__offset(48); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long DirectPayAndroidShopCashId { get { int o = __p.__offset(50); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long DirectPayAppleShopCashId { get { int o = __p.__offset(52); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long SelectAbleGachaGroupId { get { int o = __p.__offset(54); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long MaxSelectCharacterNum { get { int o = __p.__offset(56); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long DirectPayOneStoreShopCashId { get { int o = __p.__offset(58); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public string ProbabilityUrlDev { get { int o = __p.__offset(60); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetProbabilityUrlDevBytes() { return __p.__vector_as_span<byte>(60, 1); }
#else
  public ArraySegment<byte>? GetProbabilityUrlDevBytes() { return __p.__vector_as_arraysegment(60); }
#endif
  public byte[] GetProbabilityUrlDevArray() { return __p.__vector_as_array<byte>(60); }
  public string ProbabilityUrlLive { get { int o = __p.__offset(62); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetProbabilityUrlLiveBytes() { return __p.__vector_as_span<byte>(62, 1); }
#else
  public ArraySegment<byte>? GetProbabilityUrlLiveBytes() { return __p.__vector_as_arraysegment(62); }
#endif
  public byte[] GetProbabilityUrlLiveArray() { return __p.__vector_as_array<byte>(62); }

  public static Offset<Global.ShopRecruitExcel> CreateShopRecruitExcel(FlatBufferBuilder builder,
      long Id = 0,
      Global.ShopCategoryType CategoryType = Global.ShopCategoryType.General,
      bool IsLegacy = false,
      long OneGachaGoodsId = 0,
      long TenGachaGoodsId = 0,
      StringOffset GoodsDevNameOffset = default(StringOffset),
      Global.GachaDisplayTag DisplayTag = Global.GachaDisplayTag.None,
      long DisplayOrder = 0,
      StringOffset GachaBannerPathOffset = default(StringOffset),
      VectorOffset VideoIdOffset = default(VectorOffset),
      long LinkedRobbyBannerId = 0,
      VectorOffset InfoCharacterIdOffset = default(VectorOffset),
      bool SalePeriodVisible = false,
      StringOffset SalePeriodFromOffset = default(StringOffset),
      StringOffset SalePeriodToOffset = default(StringOffset),
      long RecruitCoinId = 0,
      long RecruitSellectionShopId = 0,
      long PurchaseCooltimeMin = 0,
      long PurchaseCountLimit = 0,
      Global.PurchaseCountResetType PurchaseCountResetType = Global.PurchaseCountResetType.None,
      bool IsNewbie = false,
      bool IsSelectRecruit = false,
      long DirectPayInvisibleTokenId = 0,
      long DirectPayAndroidShopCashId = 0,
      long DirectPayAppleShopCashId = 0,
      long SelectAbleGachaGroupId = 0,
      long MaxSelectCharacterNum = 0,
      long DirectPayOneStoreShopCashId = 0,
      StringOffset ProbabilityUrlDevOffset = default(StringOffset),
      StringOffset ProbabilityUrlLiveOffset = default(StringOffset)) {
    builder.StartTable(30);
    ShopRecruitExcel.AddDirectPayOneStoreShopCashId(builder, DirectPayOneStoreShopCashId);
    ShopRecruitExcel.AddMaxSelectCharacterNum(builder, MaxSelectCharacterNum);
    ShopRecruitExcel.AddSelectAbleGachaGroupId(builder, SelectAbleGachaGroupId);
    ShopRecruitExcel.AddDirectPayAppleShopCashId(builder, DirectPayAppleShopCashId);
    ShopRecruitExcel.AddDirectPayAndroidShopCashId(builder, DirectPayAndroidShopCashId);
    ShopRecruitExcel.AddDirectPayInvisibleTokenId(builder, DirectPayInvisibleTokenId);
    ShopRecruitExcel.AddPurchaseCountLimit(builder, PurchaseCountLimit);
    ShopRecruitExcel.AddPurchaseCooltimeMin(builder, PurchaseCooltimeMin);
    ShopRecruitExcel.AddRecruitSellectionShopId(builder, RecruitSellectionShopId);
    ShopRecruitExcel.AddRecruitCoinId(builder, RecruitCoinId);
    ShopRecruitExcel.AddLinkedRobbyBannerId(builder, LinkedRobbyBannerId);
    ShopRecruitExcel.AddDisplayOrder(builder, DisplayOrder);
    ShopRecruitExcel.AddTenGachaGoodsId(builder, TenGachaGoodsId);
    ShopRecruitExcel.AddOneGachaGoodsId(builder, OneGachaGoodsId);
    ShopRecruitExcel.AddId(builder, Id);
    ShopRecruitExcel.AddProbabilityUrlLive(builder, ProbabilityUrlLiveOffset);
    ShopRecruitExcel.AddProbabilityUrlDev(builder, ProbabilityUrlDevOffset);
    ShopRecruitExcel.AddPurchaseCountResetType(builder, PurchaseCountResetType);
    ShopRecruitExcel.AddSalePeriodTo(builder, SalePeriodToOffset);
    ShopRecruitExcel.AddSalePeriodFrom(builder, SalePeriodFromOffset);
    ShopRecruitExcel.AddInfoCharacterId(builder, InfoCharacterIdOffset);
    ShopRecruitExcel.AddVideoId(builder, VideoIdOffset);
    ShopRecruitExcel.AddGachaBannerPath(builder, GachaBannerPathOffset);
    ShopRecruitExcel.AddDisplayTag(builder, DisplayTag);
    ShopRecruitExcel.AddGoodsDevName(builder, GoodsDevNameOffset);
    ShopRecruitExcel.AddCategoryType(builder, CategoryType);
    ShopRecruitExcel.AddIsSelectRecruit(builder, IsSelectRecruit);
    ShopRecruitExcel.AddIsNewbie(builder, IsNewbie);
    ShopRecruitExcel.AddSalePeriodVisible(builder, SalePeriodVisible);
    ShopRecruitExcel.AddIsLegacy(builder, IsLegacy);
    return ShopRecruitExcel.EndShopRecruitExcel(builder);
  }

  public static void StartShopRecruitExcel(FlatBufferBuilder builder) { builder.StartTable(30); }
  public static void AddId(FlatBufferBuilder builder, long id) { builder.AddLong(0, id, 0); }
  public static void AddCategoryType(FlatBufferBuilder builder, Global.ShopCategoryType categoryType) { builder.AddInt(1, (int)categoryType, 0); }
  public static void AddIsLegacy(FlatBufferBuilder builder, bool isLegacy) { builder.AddBool(2, isLegacy, false); }
  public static void AddOneGachaGoodsId(FlatBufferBuilder builder, long oneGachaGoodsId) { builder.AddLong(3, oneGachaGoodsId, 0); }
  public static void AddTenGachaGoodsId(FlatBufferBuilder builder, long tenGachaGoodsId) { builder.AddLong(4, tenGachaGoodsId, 0); }
  public static void AddGoodsDevName(FlatBufferBuilder builder, StringOffset goodsDevNameOffset) { builder.AddOffset(5, goodsDevNameOffset.Value, 0); }
  public static void AddDisplayTag(FlatBufferBuilder builder, Global.GachaDisplayTag displayTag) { builder.AddInt(6, (int)displayTag, 0); }
  public static void AddDisplayOrder(FlatBufferBuilder builder, long displayOrder) { builder.AddLong(7, displayOrder, 0); }
  public static void AddGachaBannerPath(FlatBufferBuilder builder, StringOffset gachaBannerPathOffset) { builder.AddOffset(8, gachaBannerPathOffset.Value, 0); }
  public static void AddVideoId(FlatBufferBuilder builder, VectorOffset videoIdOffset) { builder.AddOffset(9, videoIdOffset.Value, 0); }
  public static VectorOffset CreateVideoIdVector(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddLong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateVideoIdVectorBlock(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateVideoIdVectorBlock(FlatBufferBuilder builder, ArraySegment<long> data) { builder.StartVector(8, data.Count, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateVideoIdVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<long>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartVideoIdVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static void AddLinkedRobbyBannerId(FlatBufferBuilder builder, long linkedRobbyBannerId) { builder.AddLong(10, linkedRobbyBannerId, 0); }
  public static void AddInfoCharacterId(FlatBufferBuilder builder, VectorOffset infoCharacterIdOffset) { builder.AddOffset(11, infoCharacterIdOffset.Value, 0); }
  public static VectorOffset CreateInfoCharacterIdVector(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddLong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateInfoCharacterIdVectorBlock(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateInfoCharacterIdVectorBlock(FlatBufferBuilder builder, ArraySegment<long> data) { builder.StartVector(8, data.Count, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateInfoCharacterIdVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<long>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartInfoCharacterIdVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static void AddSalePeriodVisible(FlatBufferBuilder builder, bool salePeriodVisible) { builder.AddBool(12, salePeriodVisible, false); }
  public static void AddSalePeriodFrom(FlatBufferBuilder builder, StringOffset salePeriodFromOffset) { builder.AddOffset(13, salePeriodFromOffset.Value, 0); }
  public static void AddSalePeriodTo(FlatBufferBuilder builder, StringOffset salePeriodToOffset) { builder.AddOffset(14, salePeriodToOffset.Value, 0); }
  public static void AddRecruitCoinId(FlatBufferBuilder builder, long recruitCoinId) { builder.AddLong(15, recruitCoinId, 0); }
  public static void AddRecruitSellectionShopId(FlatBufferBuilder builder, long recruitSellectionShopId) { builder.AddLong(16, recruitSellectionShopId, 0); }
  public static void AddPurchaseCooltimeMin(FlatBufferBuilder builder, long purchaseCooltimeMin) { builder.AddLong(17, purchaseCooltimeMin, 0); }
  public static void AddPurchaseCountLimit(FlatBufferBuilder builder, long purchaseCountLimit) { builder.AddLong(18, purchaseCountLimit, 0); }
  public static void AddPurchaseCountResetType(FlatBufferBuilder builder, Global.PurchaseCountResetType purchaseCountResetType) { builder.AddInt(19, (int)purchaseCountResetType, 0); }
  public static void AddIsNewbie(FlatBufferBuilder builder, bool isNewbie) { builder.AddBool(20, isNewbie, false); }
  public static void AddIsSelectRecruit(FlatBufferBuilder builder, bool isSelectRecruit) { builder.AddBool(21, isSelectRecruit, false); }
  public static void AddDirectPayInvisibleTokenId(FlatBufferBuilder builder, long directPayInvisibleTokenId) { builder.AddLong(22, directPayInvisibleTokenId, 0); }
  public static void AddDirectPayAndroidShopCashId(FlatBufferBuilder builder, long directPayAndroidShopCashId) { builder.AddLong(23, directPayAndroidShopCashId, 0); }
  public static void AddDirectPayAppleShopCashId(FlatBufferBuilder builder, long directPayAppleShopCashId) { builder.AddLong(24, directPayAppleShopCashId, 0); }
  public static void AddSelectAbleGachaGroupId(FlatBufferBuilder builder, long selectAbleGachaGroupId) { builder.AddLong(25, selectAbleGachaGroupId, 0); }
  public static void AddMaxSelectCharacterNum(FlatBufferBuilder builder, long maxSelectCharacterNum) { builder.AddLong(26, maxSelectCharacterNum, 0); }
  public static void AddDirectPayOneStoreShopCashId(FlatBufferBuilder builder, long directPayOneStoreShopCashId) { builder.AddLong(27, directPayOneStoreShopCashId, 0); }
  public static void AddProbabilityUrlDev(FlatBufferBuilder builder, StringOffset probabilityUrlDevOffset) { builder.AddOffset(28, probabilityUrlDevOffset.Value, 0); }
  public static void AddProbabilityUrlLive(FlatBufferBuilder builder, StringOffset probabilityUrlLiveOffset) { builder.AddOffset(29, probabilityUrlLiveOffset.Value, 0); }
  public static Offset<Global.ShopRecruitExcel> EndShopRecruitExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Global.ShopRecruitExcel>(o);
  }
  public ShopRecruitExcelT UnPack() {
    var _o = new ShopRecruitExcelT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ShopRecruitExcelT _o) {
		byte[] key = TableEncryptionService.CreateKey("ShopRecruit");
    _o.Id = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)this.Id, key) : this.Id;
    _o.CategoryType = TableEncryptionService.UseEncryption ? (Global.ShopCategoryType)TableEncryptionService.Convert((int)this.CategoryType, key) : this.CategoryType;
    _o.IsLegacy = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((bool)this.IsLegacy, key) : this.IsLegacy;
    _o.OneGachaGoodsId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)this.OneGachaGoodsId, key) : this.OneGachaGoodsId;
    _o.TenGachaGoodsId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)this.TenGachaGoodsId, key) : this.TenGachaGoodsId;
    _o.GoodsDevName = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert(this.GoodsDevName, key) : this.GoodsDevName;
    _o.DisplayTag = TableEncryptionService.UseEncryption ? (Global.GachaDisplayTag)TableEncryptionService.Convert((int)this.DisplayTag, key) : this.DisplayTag;
    _o.DisplayOrder = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)this.DisplayOrder, key) : this.DisplayOrder;
    _o.GachaBannerPath = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert(this.GachaBannerPath, key) : this.GachaBannerPath;
    _o.VideoId = new List<long>();
    for (var _j = 0; _j < this.VideoIdLength; ++_j) {_o.VideoId.Add(TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)this.VideoId(_j), key) : this.VideoId(_j));}
    _o.LinkedRobbyBannerId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)this.LinkedRobbyBannerId, key) : this.LinkedRobbyBannerId;
    _o.InfoCharacterId = new List<long>();
    for (var _j = 0; _j < this.InfoCharacterIdLength; ++_j) {_o.InfoCharacterId.Add(TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)this.InfoCharacterId(_j), key) : this.InfoCharacterId(_j));}
    _o.SalePeriodVisible = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((bool)this.SalePeriodVisible, key) : this.SalePeriodVisible;
    _o.SalePeriodFrom = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert(this.SalePeriodFrom, key) : this.SalePeriodFrom;
    _o.SalePeriodTo = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert(this.SalePeriodTo, key) : this.SalePeriodTo;
    _o.RecruitCoinId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)this.RecruitCoinId, key) : this.RecruitCoinId;
    _o.RecruitSellectionShopId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)this.RecruitSellectionShopId, key) : this.RecruitSellectionShopId;
    _o.PurchaseCooltimeMin = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)this.PurchaseCooltimeMin, key) : this.PurchaseCooltimeMin;
    _o.PurchaseCountLimit = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)this.PurchaseCountLimit, key) : this.PurchaseCountLimit;
    _o.PurchaseCountResetType = TableEncryptionService.UseEncryption ? (Global.PurchaseCountResetType)TableEncryptionService.Convert((int)this.PurchaseCountResetType, key) : this.PurchaseCountResetType;
    _o.IsNewbie = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((bool)this.IsNewbie, key) : this.IsNewbie;
    _o.IsSelectRecruit = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((bool)this.IsSelectRecruit, key) : this.IsSelectRecruit;
    _o.DirectPayInvisibleTokenId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)this.DirectPayInvisibleTokenId, key) : this.DirectPayInvisibleTokenId;
    _o.DirectPayAndroidShopCashId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)this.DirectPayAndroidShopCashId, key) : this.DirectPayAndroidShopCashId;
    _o.DirectPayAppleShopCashId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)this.DirectPayAppleShopCashId, key) : this.DirectPayAppleShopCashId;
    _o.SelectAbleGachaGroupId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)this.SelectAbleGachaGroupId, key) : this.SelectAbleGachaGroupId;
    _o.MaxSelectCharacterNum = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)this.MaxSelectCharacterNum, key) : this.MaxSelectCharacterNum;
    _o.DirectPayOneStoreShopCashId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)this.DirectPayOneStoreShopCashId, key) : this.DirectPayOneStoreShopCashId;
    _o.ProbabilityUrlDev = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert(this.ProbabilityUrlDev, key) : this.ProbabilityUrlDev;
    _o.ProbabilityUrlLive = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert(this.ProbabilityUrlLive, key) : this.ProbabilityUrlLive;
  }
  public static Offset<Global.ShopRecruitExcel> Pack(FlatBufferBuilder builder, ShopRecruitExcelT _o) {
    if (_o == null) return default(Offset<Global.ShopRecruitExcel>);
		byte[] key = TableEncryptionService.CreateKey("ShopRecruit");
		var _Id = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)_o.Id, key) : _o.Id;
		var _CategoryType = TableEncryptionService.UseEncryption ? (Global.ShopCategoryType)TableEncryptionService.Convert((int)_o.CategoryType, key) : _o.CategoryType;
		var _IsLegacy = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((bool)_o.IsLegacy, key) : _o.IsLegacy;
		var _OneGachaGoodsId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)_o.OneGachaGoodsId, key) : _o.OneGachaGoodsId;
		var _TenGachaGoodsId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)_o.TenGachaGoodsId, key) : _o.TenGachaGoodsId;
    var _GoodsDevName = _o.GoodsDevName == null ? default(StringOffset) : builder.CreateString((TableEncryptionService.UseEncryption ? TableEncryptionService.ConvertPack((string)_o.GoodsDevName, key) : _o.GoodsDevName));
		var _DisplayTag = TableEncryptionService.UseEncryption ? (Global.GachaDisplayTag)TableEncryptionService.Convert((int)_o.DisplayTag, key) : _o.DisplayTag;
		var _DisplayOrder = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)_o.DisplayOrder, key) : _o.DisplayOrder;
    var _GachaBannerPath = _o.GachaBannerPath == null ? default(StringOffset) : builder.CreateString((TableEncryptionService.UseEncryption ? TableEncryptionService.ConvertPack((string)_o.GachaBannerPath, key) : _o.GachaBannerPath));
    var _VideoId = default(VectorOffset);
    if (_o.VideoId != null) {
      var __VideoId = _o.VideoId.Select(x => TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)x, key) : x).ToArray();
      _VideoId = CreateVideoIdVector(builder, __VideoId);
    }
		var _LinkedRobbyBannerId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)_o.LinkedRobbyBannerId, key) : _o.LinkedRobbyBannerId;
    var _InfoCharacterId = default(VectorOffset);
    if (_o.InfoCharacterId != null) {
      var __InfoCharacterId = _o.InfoCharacterId.Select(x => TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)x, key) : x).ToArray();
      _InfoCharacterId = CreateInfoCharacterIdVector(builder, __InfoCharacterId);
    }
		var _SalePeriodVisible = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((bool)_o.SalePeriodVisible, key) : _o.SalePeriodVisible;
    var _SalePeriodFrom = _o.SalePeriodFrom == null ? default(StringOffset) : builder.CreateString((TableEncryptionService.UseEncryption ? TableEncryptionService.ConvertPack((string)_o.SalePeriodFrom, key) : _o.SalePeriodFrom));
    var _SalePeriodTo = _o.SalePeriodTo == null ? default(StringOffset) : builder.CreateString((TableEncryptionService.UseEncryption ? TableEncryptionService.ConvertPack((string)_o.SalePeriodTo, key) : _o.SalePeriodTo));
		var _RecruitCoinId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)_o.RecruitCoinId, key) : _o.RecruitCoinId;
		var _RecruitSellectionShopId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)_o.RecruitSellectionShopId, key) : _o.RecruitSellectionShopId;
		var _PurchaseCooltimeMin = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)_o.PurchaseCooltimeMin, key) : _o.PurchaseCooltimeMin;
		var _PurchaseCountLimit = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)_o.PurchaseCountLimit, key) : _o.PurchaseCountLimit;
		var _PurchaseCountResetType = TableEncryptionService.UseEncryption ? (Global.PurchaseCountResetType)TableEncryptionService.Convert((int)_o.PurchaseCountResetType, key) : _o.PurchaseCountResetType;
		var _IsNewbie = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((bool)_o.IsNewbie, key) : _o.IsNewbie;
		var _IsSelectRecruit = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((bool)_o.IsSelectRecruit, key) : _o.IsSelectRecruit;
		var _DirectPayInvisibleTokenId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)_o.DirectPayInvisibleTokenId, key) : _o.DirectPayInvisibleTokenId;
		var _DirectPayAndroidShopCashId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)_o.DirectPayAndroidShopCashId, key) : _o.DirectPayAndroidShopCashId;
		var _DirectPayAppleShopCashId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)_o.DirectPayAppleShopCashId, key) : _o.DirectPayAppleShopCashId;
		var _SelectAbleGachaGroupId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)_o.SelectAbleGachaGroupId, key) : _o.SelectAbleGachaGroupId;
		var _MaxSelectCharacterNum = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)_o.MaxSelectCharacterNum, key) : _o.MaxSelectCharacterNum;
		var _DirectPayOneStoreShopCashId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)_o.DirectPayOneStoreShopCashId, key) : _o.DirectPayOneStoreShopCashId;
    var _ProbabilityUrlDev = _o.ProbabilityUrlDev == null ? default(StringOffset) : builder.CreateString((TableEncryptionService.UseEncryption ? TableEncryptionService.ConvertPack((string)_o.ProbabilityUrlDev, key) : _o.ProbabilityUrlDev));
    var _ProbabilityUrlLive = _o.ProbabilityUrlLive == null ? default(StringOffset) : builder.CreateString((TableEncryptionService.UseEncryption ? TableEncryptionService.ConvertPack((string)_o.ProbabilityUrlLive, key) : _o.ProbabilityUrlLive));
    return CreateShopRecruitExcel(
      builder,
      TableEncryptionService.UseEncryption ? _Id : _o.Id,
      TableEncryptionService.UseEncryption ? _CategoryType : _o.CategoryType,
      TableEncryptionService.UseEncryption ? _IsLegacy : _o.IsLegacy,
      TableEncryptionService.UseEncryption ? _OneGachaGoodsId : _o.OneGachaGoodsId,
      TableEncryptionService.UseEncryption ? _TenGachaGoodsId : _o.TenGachaGoodsId,
      _GoodsDevName,
      TableEncryptionService.UseEncryption ? _DisplayTag : _o.DisplayTag,
      TableEncryptionService.UseEncryption ? _DisplayOrder : _o.DisplayOrder,
      _GachaBannerPath,
      _VideoId,
      TableEncryptionService.UseEncryption ? _LinkedRobbyBannerId : _o.LinkedRobbyBannerId,
      _InfoCharacterId,
      TableEncryptionService.UseEncryption ? _SalePeriodVisible : _o.SalePeriodVisible,
      _SalePeriodFrom,
      _SalePeriodTo,
      TableEncryptionService.UseEncryption ? _RecruitCoinId : _o.RecruitCoinId,
      TableEncryptionService.UseEncryption ? _RecruitSellectionShopId : _o.RecruitSellectionShopId,
      TableEncryptionService.UseEncryption ? _PurchaseCooltimeMin : _o.PurchaseCooltimeMin,
      TableEncryptionService.UseEncryption ? _PurchaseCountLimit : _o.PurchaseCountLimit,
      TableEncryptionService.UseEncryption ? _PurchaseCountResetType : _o.PurchaseCountResetType,
      TableEncryptionService.UseEncryption ? _IsNewbie : _o.IsNewbie,
      TableEncryptionService.UseEncryption ? _IsSelectRecruit : _o.IsSelectRecruit,
      TableEncryptionService.UseEncryption ? _DirectPayInvisibleTokenId : _o.DirectPayInvisibleTokenId,
      TableEncryptionService.UseEncryption ? _DirectPayAndroidShopCashId : _o.DirectPayAndroidShopCashId,
      TableEncryptionService.UseEncryption ? _DirectPayAppleShopCashId : _o.DirectPayAppleShopCashId,
      TableEncryptionService.UseEncryption ? _SelectAbleGachaGroupId : _o.SelectAbleGachaGroupId,
      TableEncryptionService.UseEncryption ? _MaxSelectCharacterNum : _o.MaxSelectCharacterNum,
      TableEncryptionService.UseEncryption ? _DirectPayOneStoreShopCashId : _o.DirectPayOneStoreShopCashId,
      _ProbabilityUrlDev,
      _ProbabilityUrlLive);
  }
}

public class ShopRecruitExcelT
{
  public long Id { get; set; }
  public Global.ShopCategoryType CategoryType { get; set; }
  public bool IsLegacy { get; set; }
  public long OneGachaGoodsId { get; set; }
  public long TenGachaGoodsId { get; set; }
  public string GoodsDevName { get; set; }
  public Global.GachaDisplayTag DisplayTag { get; set; }
  public long DisplayOrder { get; set; }
  public string GachaBannerPath { get; set; }
  public List<long> VideoId { get; set; }
  public long LinkedRobbyBannerId { get; set; }
  public List<long> InfoCharacterId { get; set; }
  public bool SalePeriodVisible { get; set; }
  public string SalePeriodFrom { get; set; }
  public string SalePeriodTo { get; set; }
  public long RecruitCoinId { get; set; }
  public long RecruitSellectionShopId { get; set; }
  public long PurchaseCooltimeMin { get; set; }
  public long PurchaseCountLimit { get; set; }
  public Global.PurchaseCountResetType PurchaseCountResetType { get; set; }
  public bool IsNewbie { get; set; }
  public bool IsSelectRecruit { get; set; }
  public long DirectPayInvisibleTokenId { get; set; }
  public long DirectPayAndroidShopCashId { get; set; }
  public long DirectPayAppleShopCashId { get; set; }
  public long SelectAbleGachaGroupId { get; set; }
  public long MaxSelectCharacterNum { get; set; }
  public long DirectPayOneStoreShopCashId { get; set; }
  public string ProbabilityUrlDev { get; set; }
  public string ProbabilityUrlLive { get; set; }

  public ShopRecruitExcelT() {
    this.Id = 0;
    this.CategoryType = Global.ShopCategoryType.General;
    this.IsLegacy = false;
    this.OneGachaGoodsId = 0;
    this.TenGachaGoodsId = 0;
    this.GoodsDevName = null;
    this.DisplayTag = Global.GachaDisplayTag.None;
    this.DisplayOrder = 0;
    this.GachaBannerPath = null;
    this.VideoId = null;
    this.LinkedRobbyBannerId = 0;
    this.InfoCharacterId = null;
    this.SalePeriodVisible = false;
    this.SalePeriodFrom = null;
    this.SalePeriodTo = null;
    this.RecruitCoinId = 0;
    this.RecruitSellectionShopId = 0;
    this.PurchaseCooltimeMin = 0;
    this.PurchaseCountLimit = 0;
    this.PurchaseCountResetType = Global.PurchaseCountResetType.None;
    this.IsNewbie = false;
    this.IsSelectRecruit = false;
    this.DirectPayInvisibleTokenId = 0;
    this.DirectPayAndroidShopCashId = 0;
    this.DirectPayAppleShopCashId = 0;
    this.SelectAbleGachaGroupId = 0;
    this.MaxSelectCharacterNum = 0;
    this.DirectPayOneStoreShopCashId = 0;
    this.ProbabilityUrlDev = null;
    this.ProbabilityUrlLive = null;
  }
}


static public class ShopRecruitExcelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 6 /*CategoryType*/, 4 /*Global.ShopCategoryType*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*IsLegacy*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 10 /*OneGachaGoodsId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 12 /*TenGachaGoodsId*/, 8 /*long*/, 8, false)
      && verifier.VerifyString(tablePos, 14 /*GoodsDevName*/, false)
      && verifier.VerifyField(tablePos, 16 /*DisplayTag*/, 4 /*Global.GachaDisplayTag*/, 4, false)
      && verifier.VerifyField(tablePos, 18 /*DisplayOrder*/, 8 /*long*/, 8, false)
      && verifier.VerifyString(tablePos, 20 /*GachaBannerPath*/, false)
      && verifier.VerifyVectorOfData(tablePos, 22 /*VideoId*/, 8 /*long*/, false)
      && verifier.VerifyField(tablePos, 24 /*LinkedRobbyBannerId*/, 8 /*long*/, 8, false)
      && verifier.VerifyVectorOfData(tablePos, 26 /*InfoCharacterId*/, 8 /*long*/, false)
      && verifier.VerifyField(tablePos, 28 /*SalePeriodVisible*/, 1 /*bool*/, 1, false)
      && verifier.VerifyString(tablePos, 30 /*SalePeriodFrom*/, false)
      && verifier.VerifyString(tablePos, 32 /*SalePeriodTo*/, false)
      && verifier.VerifyField(tablePos, 34 /*RecruitCoinId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 36 /*RecruitSellectionShopId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 38 /*PurchaseCooltimeMin*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 40 /*PurchaseCountLimit*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 42 /*PurchaseCountResetType*/, 4 /*Global.PurchaseCountResetType*/, 4, false)
      && verifier.VerifyField(tablePos, 44 /*IsNewbie*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 46 /*IsSelectRecruit*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 48 /*DirectPayInvisibleTokenId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 50 /*DirectPayAndroidShopCashId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 52 /*DirectPayAppleShopCashId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 54 /*SelectAbleGachaGroupId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 56 /*MaxSelectCharacterNum*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 58 /*DirectPayOneStoreShopCashId*/, 8 /*long*/, 8, false)
      && verifier.VerifyString(tablePos, 60 /*ProbabilityUrlDev*/, false)
      && verifier.VerifyString(tablePos, 62 /*ProbabilityUrlLive*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
