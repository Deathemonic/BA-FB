// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Global
{

using global::System;
using global::System.Collections.Generic;
using global::Kuroko.Crypto;
using global::Google.FlatBuffers;

public struct TagExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static TagExcel GetRootAsTagExcel(ByteBuffer _bb) { return GetRootAsTagExcel(_bb, new TagExcel()); }
  public static TagExcel GetRootAsTagExcel(ByteBuffer _bb, TagExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TagExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Global.Tag Furniture { get { int o = __p.__offset(4); return o != 0 ? (Global.Tag)__p.bb.GetInt(o + __p.bb_pos) : Global.Tag.A; } }
  public Global.Club None { get { int o = __p.__offset(6); return o != 0 ? (Global.Club)__p.bb.GetInt(o + __p.bb_pos) : Global.Club.None; } }

  public static Offset<Global.TagExcel> CreateTagExcel(FlatBufferBuilder builder,
      Global.Tag Furniture = Global.Tag.A,
      Global.Club None = Global.Club.None) {
    builder.StartTable(2);
    TagExcel.AddNone(builder, None);
    TagExcel.AddFurniture(builder, Furniture);
    return TagExcel.EndTagExcel(builder);
  }

  public static void StartTagExcel(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddFurniture(FlatBufferBuilder builder, Global.Tag furniture) { builder.AddInt(0, (int)furniture, 0); }
  public static void AddNone(FlatBufferBuilder builder, Global.Club none) { builder.AddInt(1, (int)none, 0); }
  public static Offset<Global.TagExcel> EndTagExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Global.TagExcel>(o);
  }
  public TagExcelT UnPack() {
    var _o = new TagExcelT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(TagExcelT _o) {
		byte[] key = TableEncryptionService.CreateKey("Tag");
    _o.Furniture = TableEncryptionService.UseEncryption ? (Global.Tag)TableEncryptionService.Convert((int)this.Furniture, key) : this.Furniture;
    _o.None = TableEncryptionService.UseEncryption ? (Global.Club)TableEncryptionService.Convert((int)this.None, key) : this.None;
  }
  public static Offset<Global.TagExcel> Pack(FlatBufferBuilder builder, TagExcelT _o) {
    if (_o == null) return default(Offset<Global.TagExcel>);
		byte[] key = TableEncryptionService.CreateKey("Tag");
		var _Furniture = TableEncryptionService.UseEncryption ? (Global.Tag)TableEncryptionService.Convert((int)_o.Furniture, key) : _o.Furniture;
		var _None = TableEncryptionService.UseEncryption ? (Global.Club)TableEncryptionService.Convert((int)_o.None, key) : _o.None;
    return CreateTagExcel(
      builder,
      TableEncryptionService.UseEncryption ? _Furniture : _o.Furniture,
      TableEncryptionService.UseEncryption ? _None : _o.None);
  }
}

public class TagExcelT
{
  public Global.Tag Furniture { get; set; }
  public Global.Club None { get; set; }

  public TagExcelT() {
    this.Furniture = Global.Tag.A;
    this.None = Global.Club.None;
  }
}


static public class TagExcelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Furniture*/, 4 /*Global.Tag*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*None*/, 4 /*Global.Club*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
