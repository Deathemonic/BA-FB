// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Global
{

using global::System;
using global::System.Collections.Generic;
using global::Kuroko.Crypto;
using global::Google.FlatBuffers;

public struct EventContentMiniEventShortCutExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static EventContentMiniEventShortCutExcel GetRootAsEventContentMiniEventShortCutExcel(ByteBuffer _bb) { return GetRootAsEventContentMiniEventShortCutExcel(_bb, new EventContentMiniEventShortCutExcel()); }
  public static EventContentMiniEventShortCutExcel GetRootAsEventContentMiniEventShortCutExcel(ByteBuffer _bb, EventContentMiniEventShortCutExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EventContentMiniEventShortCutExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public uint LocalizeEtcId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public Global.EventTargetType ShorcutContentType { get { int o = __p.__offset(8); return o != 0 ? (Global.EventTargetType)__p.bb.GetInt(o + __p.bb_pos) : Global.EventTargetType.WeekDungeon; } }
  public string ShortcutUI { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetShortcutUIBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetShortcutUIBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetShortcutUIArray() { return __p.__vector_as_array<byte>(10); }

  public static Offset<Global.EventContentMiniEventShortCutExcel> CreateEventContentMiniEventShortCutExcel(FlatBufferBuilder builder,
      int Id = 0,
      uint LocalizeEtcId = 0,
      Global.EventTargetType ShorcutContentType = Global.EventTargetType.WeekDungeon,
      StringOffset ShortcutUIOffset = default(StringOffset)) {
    builder.StartTable(4);
    EventContentMiniEventShortCutExcel.AddShortcutUI(builder, ShortcutUIOffset);
    EventContentMiniEventShortCutExcel.AddShorcutContentType(builder, ShorcutContentType);
    EventContentMiniEventShortCutExcel.AddLocalizeEtcId(builder, LocalizeEtcId);
    EventContentMiniEventShortCutExcel.AddId(builder, Id);
    return EventContentMiniEventShortCutExcel.EndEventContentMiniEventShortCutExcel(builder);
  }

  public static void StartEventContentMiniEventShortCutExcel(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddLocalizeEtcId(FlatBufferBuilder builder, uint localizeEtcId) { builder.AddUint(1, localizeEtcId, 0); }
  public static void AddShorcutContentType(FlatBufferBuilder builder, Global.EventTargetType shorcutContentType) { builder.AddInt(2, (int)shorcutContentType, 0); }
  public static void AddShortcutUI(FlatBufferBuilder builder, StringOffset shortcutUIOffset) { builder.AddOffset(3, shortcutUIOffset.Value, 0); }
  public static Offset<Global.EventContentMiniEventShortCutExcel> EndEventContentMiniEventShortCutExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Global.EventContentMiniEventShortCutExcel>(o);
  }
  public EventContentMiniEventShortCutExcelT UnPack() {
    var _o = new EventContentMiniEventShortCutExcelT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(EventContentMiniEventShortCutExcelT _o) {
		byte[] key = TableEncryptionService.CreateKey("EventContentMiniEventShortCut");
    _o.Id = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((int)this.Id, key) : this.Id;
    _o.LocalizeEtcId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((uint)this.LocalizeEtcId, key) : this.LocalizeEtcId;
    _o.ShorcutContentType = TableEncryptionService.UseEncryption ? (Global.EventTargetType)TableEncryptionService.Convert((int)this.ShorcutContentType, key) : this.ShorcutContentType;
    _o.ShortcutUI = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert(this.ShortcutUI, key) : this.ShortcutUI;
  }
  public static Offset<Global.EventContentMiniEventShortCutExcel> Pack(FlatBufferBuilder builder, EventContentMiniEventShortCutExcelT _o) {
    if (_o == null) return default(Offset<Global.EventContentMiniEventShortCutExcel>);
		byte[] key = TableEncryptionService.CreateKey("EventContentMiniEventShortCut");
		var _Id = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((int)_o.Id, key) : _o.Id;
		var _LocalizeEtcId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((uint)_o.LocalizeEtcId, key) : _o.LocalizeEtcId;
		var _ShorcutContentType = TableEncryptionService.UseEncryption ? (Global.EventTargetType)TableEncryptionService.Convert((int)_o.ShorcutContentType, key) : _o.ShorcutContentType;
    var _ShortcutUI = _o.ShortcutUI == null ? default(StringOffset) : builder.CreateString((TableEncryptionService.UseEncryption ? TableEncryptionService.ConvertPack((string)_o.ShortcutUI, key) : _o.ShortcutUI));
    return CreateEventContentMiniEventShortCutExcel(
      builder,
      TableEncryptionService.UseEncryption ? _Id : _o.Id,
      TableEncryptionService.UseEncryption ? _LocalizeEtcId : _o.LocalizeEtcId,
      TableEncryptionService.UseEncryption ? _ShorcutContentType : _o.ShorcutContentType,
      _ShortcutUI);
  }
}

public class EventContentMiniEventShortCutExcelT
{
  public int Id { get; set; }
  public uint LocalizeEtcId { get; set; }
  public Global.EventTargetType ShorcutContentType { get; set; }
  public string ShortcutUI { get; set; }

  public EventContentMiniEventShortCutExcelT() {
    this.Id = 0;
    this.LocalizeEtcId = 0;
    this.ShorcutContentType = Global.EventTargetType.WeekDungeon;
    this.ShortcutUI = null;
  }
}


static public class EventContentMiniEventShortCutExcelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*LocalizeEtcId*/, 4 /*uint*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*ShorcutContentType*/, 4 /*Global.EventTargetType*/, 4, false)
      && verifier.VerifyString(tablePos, 10 /*ShortcutUI*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
