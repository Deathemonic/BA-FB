// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Global
{

using global::System;
using global::System.Collections.Generic;
using global::Kuroko.Crypto;
using global::Google.FlatBuffers;

public struct CharacterDialogExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static CharacterDialogExcel GetRootAsCharacterDialogExcel(ByteBuffer _bb) { return GetRootAsCharacterDialogExcel(_bb, new CharacterDialogExcel()); }
  public static CharacterDialogExcel GetRootAsCharacterDialogExcel(ByteBuffer _bb, CharacterDialogExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CharacterDialogExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long CharacterId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long CostumeUniqueId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long DisplayOrder { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public Global.ProductionStep ProductionStep { get { int o = __p.__offset(10); return o != 0 ? (Global.ProductionStep)__p.bb.GetInt(o + __p.bb_pos) : Global.ProductionStep.ToDo; } }
  public Global.DialogCategory DialogCategory { get { int o = __p.__offset(12); return o != 0 ? (Global.DialogCategory)__p.bb.GetInt(o + __p.bb_pos) : Global.DialogCategory.Cafe; } }
  public Global.DialogCondition DialogCondition { get { int o = __p.__offset(14); return o != 0 ? (Global.DialogCondition)__p.bb.GetInt(o + __p.bb_pos) : Global.DialogCondition.Idle; } }
  public Global.Anniversary Anniversary { get { int o = __p.__offset(16); return o != 0 ? (Global.Anniversary)__p.bb.GetInt(o + __p.bb_pos) : Global.Anniversary.None; } }
  public string StartDate { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetStartDateBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetStartDateBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetStartDateArray() { return __p.__vector_as_array<byte>(18); }
  public string EndDate { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetEndDateBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetEndDateBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetEndDateArray() { return __p.__vector_as_array<byte>(20); }
  public long GroupId { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public Global.DialogType DialogType { get { int o = __p.__offset(24); return o != 0 ? (Global.DialogType)__p.bb.GetInt(o + __p.bb_pos) : Global.DialogType.Talk; } }
  public string ActionName { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetActionNameBytes() { return __p.__vector_as_span<byte>(26, 1); }
#else
  public ArraySegment<byte>? GetActionNameBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public byte[] GetActionNameArray() { return __p.__vector_as_array<byte>(26); }
  public long Duration { get { int o = __p.__offset(28); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long DurationKr { get { int o = __p.__offset(30); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public string AnimationName { get { int o = __p.__offset(32); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAnimationNameBytes() { return __p.__vector_as_span<byte>(32, 1); }
#else
  public ArraySegment<byte>? GetAnimationNameBytes() { return __p.__vector_as_arraysegment(32); }
#endif
  public byte[] GetAnimationNameArray() { return __p.__vector_as_array<byte>(32); }
  public string LocalizeKR { get { int o = __p.__offset(34); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLocalizeKRBytes() { return __p.__vector_as_span<byte>(34, 1); }
#else
  public ArraySegment<byte>? GetLocalizeKRBytes() { return __p.__vector_as_arraysegment(34); }
#endif
  public byte[] GetLocalizeKRArray() { return __p.__vector_as_array<byte>(34); }
  public string LocalizeJP { get { int o = __p.__offset(36); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLocalizeJPBytes() { return __p.__vector_as_span<byte>(36, 1); }
#else
  public ArraySegment<byte>? GetLocalizeJPBytes() { return __p.__vector_as_arraysegment(36); }
#endif
  public byte[] GetLocalizeJPArray() { return __p.__vector_as_array<byte>(36); }
  public string LocalizeTH { get { int o = __p.__offset(38); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLocalizeTHBytes() { return __p.__vector_as_span<byte>(38, 1); }
#else
  public ArraySegment<byte>? GetLocalizeTHBytes() { return __p.__vector_as_arraysegment(38); }
#endif
  public byte[] GetLocalizeTHArray() { return __p.__vector_as_array<byte>(38); }
  public string LocalizeTW { get { int o = __p.__offset(40); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLocalizeTWBytes() { return __p.__vector_as_span<byte>(40, 1); }
#else
  public ArraySegment<byte>? GetLocalizeTWBytes() { return __p.__vector_as_arraysegment(40); }
#endif
  public byte[] GetLocalizeTWArray() { return __p.__vector_as_array<byte>(40); }
  public string LocalizeEN { get { int o = __p.__offset(42); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLocalizeENBytes() { return __p.__vector_as_span<byte>(42, 1); }
#else
  public ArraySegment<byte>? GetLocalizeENBytes() { return __p.__vector_as_arraysegment(42); }
#endif
  public byte[] GetLocalizeENArray() { return __p.__vector_as_array<byte>(42); }
  public uint VoiceId(int j) { int o = __p.__offset(44); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int VoiceIdLength { get { int o = __p.__offset(44); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<uint> GetVoiceIdBytes() { return __p.__vector_as_span<uint>(44, 4); }
#else
  public ArraySegment<byte>? GetVoiceIdBytes() { return __p.__vector_as_arraysegment(44); }
#endif
  public uint[] GetVoiceIdArray() { return __p.__vector_as_array<uint>(44); }
  public bool ApplyPosition { get { int o = __p.__offset(46); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public float PosX { get { int o = __p.__offset(48); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float PosY { get { int o = __p.__offset(50); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public bool CollectionVisible { get { int o = __p.__offset(52); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public Global.CVCollectionType CVCollectionType { get { int o = __p.__offset(54); return o != 0 ? (Global.CVCollectionType)__p.bb.GetInt(o + __p.bb_pos) : Global.CVCollectionType.CVNormal; } }
  public long UnlockFavorRank { get { int o = __p.__offset(56); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public bool UnlockEquipWeapon { get { int o = __p.__offset(58); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public string LocalizeCVGroup { get { int o = __p.__offset(60); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLocalizeCVGroupBytes() { return __p.__vector_as_span<byte>(60, 1); }
#else
  public ArraySegment<byte>? GetLocalizeCVGroupBytes() { return __p.__vector_as_arraysegment(60); }
#endif
  public byte[] GetLocalizeCVGroupArray() { return __p.__vector_as_array<byte>(60); }
  public bool TeenMode { get { int o = __p.__offset(62); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<Global.CharacterDialogExcel> CreateCharacterDialogExcel(FlatBufferBuilder builder,
      long CharacterId = 0,
      long CostumeUniqueId = 0,
      long DisplayOrder = 0,
      Global.ProductionStep ProductionStep = Global.ProductionStep.ToDo,
      Global.DialogCategory DialogCategory = Global.DialogCategory.Cafe,
      Global.DialogCondition DialogCondition = Global.DialogCondition.Idle,
      Global.Anniversary Anniversary = Global.Anniversary.None,
      StringOffset StartDateOffset = default(StringOffset),
      StringOffset EndDateOffset = default(StringOffset),
      long GroupId = 0,
      Global.DialogType DialogType = Global.DialogType.Talk,
      StringOffset ActionNameOffset = default(StringOffset),
      long Duration = 0,
      long DurationKr = 0,
      StringOffset AnimationNameOffset = default(StringOffset),
      StringOffset LocalizeKROffset = default(StringOffset),
      StringOffset LocalizeJPOffset = default(StringOffset),
      StringOffset LocalizeTHOffset = default(StringOffset),
      StringOffset LocalizeTWOffset = default(StringOffset),
      StringOffset LocalizeENOffset = default(StringOffset),
      VectorOffset VoiceIdOffset = default(VectorOffset),
      bool ApplyPosition = false,
      float PosX = 0.0f,
      float PosY = 0.0f,
      bool CollectionVisible = false,
      Global.CVCollectionType CVCollectionType = Global.CVCollectionType.CVNormal,
      long UnlockFavorRank = 0,
      bool UnlockEquipWeapon = false,
      StringOffset LocalizeCVGroupOffset = default(StringOffset),
      bool TeenMode = false) {
    builder.StartTable(30);
    CharacterDialogExcel.AddUnlockFavorRank(builder, UnlockFavorRank);
    CharacterDialogExcel.AddDurationKr(builder, DurationKr);
    CharacterDialogExcel.AddDuration(builder, Duration);
    CharacterDialogExcel.AddGroupId(builder, GroupId);
    CharacterDialogExcel.AddDisplayOrder(builder, DisplayOrder);
    CharacterDialogExcel.AddCostumeUniqueId(builder, CostumeUniqueId);
    CharacterDialogExcel.AddCharacterId(builder, CharacterId);
    CharacterDialogExcel.AddLocalizeCVGroup(builder, LocalizeCVGroupOffset);
    CharacterDialogExcel.AddCVCollectionType(builder, CVCollectionType);
    CharacterDialogExcel.AddPosY(builder, PosY);
    CharacterDialogExcel.AddPosX(builder, PosX);
    CharacterDialogExcel.AddVoiceId(builder, VoiceIdOffset);
    CharacterDialogExcel.AddLocalizeEN(builder, LocalizeENOffset);
    CharacterDialogExcel.AddLocalizeTW(builder, LocalizeTWOffset);
    CharacterDialogExcel.AddLocalizeTH(builder, LocalizeTHOffset);
    CharacterDialogExcel.AddLocalizeJP(builder, LocalizeJPOffset);
    CharacterDialogExcel.AddLocalizeKR(builder, LocalizeKROffset);
    CharacterDialogExcel.AddAnimationName(builder, AnimationNameOffset);
    CharacterDialogExcel.AddActionName(builder, ActionNameOffset);
    CharacterDialogExcel.AddDialogType(builder, DialogType);
    CharacterDialogExcel.AddEndDate(builder, EndDateOffset);
    CharacterDialogExcel.AddStartDate(builder, StartDateOffset);
    CharacterDialogExcel.AddAnniversary(builder, Anniversary);
    CharacterDialogExcel.AddDialogCondition(builder, DialogCondition);
    CharacterDialogExcel.AddDialogCategory(builder, DialogCategory);
    CharacterDialogExcel.AddProductionStep(builder, ProductionStep);
    CharacterDialogExcel.AddTeenMode(builder, TeenMode);
    CharacterDialogExcel.AddUnlockEquipWeapon(builder, UnlockEquipWeapon);
    CharacterDialogExcel.AddCollectionVisible(builder, CollectionVisible);
    CharacterDialogExcel.AddApplyPosition(builder, ApplyPosition);
    return CharacterDialogExcel.EndCharacterDialogExcel(builder);
  }

  public static void StartCharacterDialogExcel(FlatBufferBuilder builder) { builder.StartTable(30); }
  public static void AddCharacterId(FlatBufferBuilder builder, long characterId) { builder.AddLong(0, characterId, 0); }
  public static void AddCostumeUniqueId(FlatBufferBuilder builder, long costumeUniqueId) { builder.AddLong(1, costumeUniqueId, 0); }
  public static void AddDisplayOrder(FlatBufferBuilder builder, long displayOrder) { builder.AddLong(2, displayOrder, 0); }
  public static void AddProductionStep(FlatBufferBuilder builder, Global.ProductionStep productionStep) { builder.AddInt(3, (int)productionStep, 0); }
  public static void AddDialogCategory(FlatBufferBuilder builder, Global.DialogCategory dialogCategory) { builder.AddInt(4, (int)dialogCategory, 0); }
  public static void AddDialogCondition(FlatBufferBuilder builder, Global.DialogCondition dialogCondition) { builder.AddInt(5, (int)dialogCondition, 0); }
  public static void AddAnniversary(FlatBufferBuilder builder, Global.Anniversary anniversary) { builder.AddInt(6, (int)anniversary, 0); }
  public static void AddStartDate(FlatBufferBuilder builder, StringOffset startDateOffset) { builder.AddOffset(7, startDateOffset.Value, 0); }
  public static void AddEndDate(FlatBufferBuilder builder, StringOffset endDateOffset) { builder.AddOffset(8, endDateOffset.Value, 0); }
  public static void AddGroupId(FlatBufferBuilder builder, long groupId) { builder.AddLong(9, groupId, 0); }
  public static void AddDialogType(FlatBufferBuilder builder, Global.DialogType dialogType) { builder.AddInt(10, (int)dialogType, 0); }
  public static void AddActionName(FlatBufferBuilder builder, StringOffset actionNameOffset) { builder.AddOffset(11, actionNameOffset.Value, 0); }
  public static void AddDuration(FlatBufferBuilder builder, long duration) { builder.AddLong(12, duration, 0); }
  public static void AddDurationKr(FlatBufferBuilder builder, long durationKr) { builder.AddLong(13, durationKr, 0); }
  public static void AddAnimationName(FlatBufferBuilder builder, StringOffset animationNameOffset) { builder.AddOffset(14, animationNameOffset.Value, 0); }
  public static void AddLocalizeKR(FlatBufferBuilder builder, StringOffset localizeKROffset) { builder.AddOffset(15, localizeKROffset.Value, 0); }
  public static void AddLocalizeJP(FlatBufferBuilder builder, StringOffset localizeJPOffset) { builder.AddOffset(16, localizeJPOffset.Value, 0); }
  public static void AddLocalizeTH(FlatBufferBuilder builder, StringOffset localizeTHOffset) { builder.AddOffset(17, localizeTHOffset.Value, 0); }
  public static void AddLocalizeTW(FlatBufferBuilder builder, StringOffset localizeTWOffset) { builder.AddOffset(18, localizeTWOffset.Value, 0); }
  public static void AddLocalizeEN(FlatBufferBuilder builder, StringOffset localizeENOffset) { builder.AddOffset(19, localizeENOffset.Value, 0); }
  public static void AddVoiceId(FlatBufferBuilder builder, VectorOffset voiceIdOffset) { builder.AddOffset(20, voiceIdOffset.Value, 0); }
  public static VectorOffset CreateVoiceIdVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateVoiceIdVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateVoiceIdVectorBlock(FlatBufferBuilder builder, ArraySegment<uint> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateVoiceIdVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<uint>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartVoiceIdVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddApplyPosition(FlatBufferBuilder builder, bool applyPosition) { builder.AddBool(21, applyPosition, false); }
  public static void AddPosX(FlatBufferBuilder builder, float posX) { builder.AddFloat(22, posX, 0.0f); }
  public static void AddPosY(FlatBufferBuilder builder, float posY) { builder.AddFloat(23, posY, 0.0f); }
  public static void AddCollectionVisible(FlatBufferBuilder builder, bool collectionVisible) { builder.AddBool(24, collectionVisible, false); }
  public static void AddCVCollectionType(FlatBufferBuilder builder, Global.CVCollectionType cVCollectionType) { builder.AddInt(25, (int)cVCollectionType, 0); }
  public static void AddUnlockFavorRank(FlatBufferBuilder builder, long unlockFavorRank) { builder.AddLong(26, unlockFavorRank, 0); }
  public static void AddUnlockEquipWeapon(FlatBufferBuilder builder, bool unlockEquipWeapon) { builder.AddBool(27, unlockEquipWeapon, false); }
  public static void AddLocalizeCVGroup(FlatBufferBuilder builder, StringOffset localizeCVGroupOffset) { builder.AddOffset(28, localizeCVGroupOffset.Value, 0); }
  public static void AddTeenMode(FlatBufferBuilder builder, bool teenMode) { builder.AddBool(29, teenMode, false); }
  public static Offset<Global.CharacterDialogExcel> EndCharacterDialogExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Global.CharacterDialogExcel>(o);
  }
  public CharacterDialogExcelT UnPack() {
    var _o = new CharacterDialogExcelT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CharacterDialogExcelT _o) {
		byte[] key = TableEncryptionService.CreateKey("CharacterDialog");
    _o.CharacterId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)this.CharacterId, key) : this.CharacterId;
    _o.CostumeUniqueId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)this.CostumeUniqueId, key) : this.CostumeUniqueId;
    _o.DisplayOrder = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)this.DisplayOrder, key) : this.DisplayOrder;
    _o.ProductionStep = TableEncryptionService.UseEncryption ? (Global.ProductionStep)TableEncryptionService.Convert((int)this.ProductionStep, key) : this.ProductionStep;
    _o.DialogCategory = TableEncryptionService.UseEncryption ? (Global.DialogCategory)TableEncryptionService.Convert((int)this.DialogCategory, key) : this.DialogCategory;
    _o.DialogCondition = TableEncryptionService.UseEncryption ? (Global.DialogCondition)TableEncryptionService.Convert((int)this.DialogCondition, key) : this.DialogCondition;
    _o.Anniversary = TableEncryptionService.UseEncryption ? (Global.Anniversary)TableEncryptionService.Convert((int)this.Anniversary, key) : this.Anniversary;
    _o.StartDate = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert(this.StartDate, key) : this.StartDate;
    _o.EndDate = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert(this.EndDate, key) : this.EndDate;
    _o.GroupId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)this.GroupId, key) : this.GroupId;
    _o.DialogType = TableEncryptionService.UseEncryption ? (Global.DialogType)TableEncryptionService.Convert((int)this.DialogType, key) : this.DialogType;
    _o.ActionName = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert(this.ActionName, key) : this.ActionName;
    _o.Duration = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)this.Duration, key) : this.Duration;
    _o.DurationKr = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)this.DurationKr, key) : this.DurationKr;
    _o.AnimationName = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert(this.AnimationName, key) : this.AnimationName;
    _o.LocalizeKR = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert(this.LocalizeKR, key) : this.LocalizeKR;
    _o.LocalizeJP = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert(this.LocalizeJP, key) : this.LocalizeJP;
    _o.LocalizeTH = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert(this.LocalizeTH, key) : this.LocalizeTH;
    _o.LocalizeTW = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert(this.LocalizeTW, key) : this.LocalizeTW;
    _o.LocalizeEN = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert(this.LocalizeEN, key) : this.LocalizeEN;
    _o.VoiceId = new List<uint>();
    for (var _j = 0; _j < this.VoiceIdLength; ++_j) {_o.VoiceId.Add(TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((uint)this.VoiceId(_j), key) : this.VoiceId(_j));}
    _o.ApplyPosition = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((bool)this.ApplyPosition, key) : this.ApplyPosition;
    _o.PosX = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((float)this.PosX, key) : this.PosX;
    _o.PosY = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((float)this.PosY, key) : this.PosY;
    _o.CollectionVisible = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((bool)this.CollectionVisible, key) : this.CollectionVisible;
    _o.CVCollectionType = TableEncryptionService.UseEncryption ? (Global.CVCollectionType)TableEncryptionService.Convert((int)this.CVCollectionType, key) : this.CVCollectionType;
    _o.UnlockFavorRank = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)this.UnlockFavorRank, key) : this.UnlockFavorRank;
    _o.UnlockEquipWeapon = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((bool)this.UnlockEquipWeapon, key) : this.UnlockEquipWeapon;
    _o.LocalizeCVGroup = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert(this.LocalizeCVGroup, key) : this.LocalizeCVGroup;
    _o.TeenMode = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((bool)this.TeenMode, key) : this.TeenMode;
  }
  public static Offset<Global.CharacterDialogExcel> Pack(FlatBufferBuilder builder, CharacterDialogExcelT _o) {
    if (_o == null) return default(Offset<Global.CharacterDialogExcel>);
		byte[] key = TableEncryptionService.CreateKey("CharacterDialog");
		var _CharacterId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)_o.CharacterId, key) : _o.CharacterId;
		var _CostumeUniqueId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)_o.CostumeUniqueId, key) : _o.CostumeUniqueId;
		var _DisplayOrder = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)_o.DisplayOrder, key) : _o.DisplayOrder;
		var _ProductionStep = TableEncryptionService.UseEncryption ? (Global.ProductionStep)TableEncryptionService.Convert((int)_o.ProductionStep, key) : _o.ProductionStep;
		var _DialogCategory = TableEncryptionService.UseEncryption ? (Global.DialogCategory)TableEncryptionService.Convert((int)_o.DialogCategory, key) : _o.DialogCategory;
		var _DialogCondition = TableEncryptionService.UseEncryption ? (Global.DialogCondition)TableEncryptionService.Convert((int)_o.DialogCondition, key) : _o.DialogCondition;
		var _Anniversary = TableEncryptionService.UseEncryption ? (Global.Anniversary)TableEncryptionService.Convert((int)_o.Anniversary, key) : _o.Anniversary;
    var _StartDate = _o.StartDate == null ? default(StringOffset) : builder.CreateString((TableEncryptionService.UseEncryption ? TableEncryptionService.ConvertPack((string)_o.StartDate, key) : _o.StartDate));
    var _EndDate = _o.EndDate == null ? default(StringOffset) : builder.CreateString((TableEncryptionService.UseEncryption ? TableEncryptionService.ConvertPack((string)_o.EndDate, key) : _o.EndDate));
		var _GroupId = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)_o.GroupId, key) : _o.GroupId;
		var _DialogType = TableEncryptionService.UseEncryption ? (Global.DialogType)TableEncryptionService.Convert((int)_o.DialogType, key) : _o.DialogType;
    var _ActionName = _o.ActionName == null ? default(StringOffset) : builder.CreateString((TableEncryptionService.UseEncryption ? TableEncryptionService.ConvertPack((string)_o.ActionName, key) : _o.ActionName));
		var _Duration = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)_o.Duration, key) : _o.Duration;
		var _DurationKr = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)_o.DurationKr, key) : _o.DurationKr;
    var _AnimationName = _o.AnimationName == null ? default(StringOffset) : builder.CreateString((TableEncryptionService.UseEncryption ? TableEncryptionService.ConvertPack((string)_o.AnimationName, key) : _o.AnimationName));
    var _LocalizeKR = _o.LocalizeKR == null ? default(StringOffset) : builder.CreateString((TableEncryptionService.UseEncryption ? TableEncryptionService.ConvertPack((string)_o.LocalizeKR, key) : _o.LocalizeKR));
    var _LocalizeJP = _o.LocalizeJP == null ? default(StringOffset) : builder.CreateString((TableEncryptionService.UseEncryption ? TableEncryptionService.ConvertPack((string)_o.LocalizeJP, key) : _o.LocalizeJP));
    var _LocalizeTH = _o.LocalizeTH == null ? default(StringOffset) : builder.CreateString((TableEncryptionService.UseEncryption ? TableEncryptionService.ConvertPack((string)_o.LocalizeTH, key) : _o.LocalizeTH));
    var _LocalizeTW = _o.LocalizeTW == null ? default(StringOffset) : builder.CreateString((TableEncryptionService.UseEncryption ? TableEncryptionService.ConvertPack((string)_o.LocalizeTW, key) : _o.LocalizeTW));
    var _LocalizeEN = _o.LocalizeEN == null ? default(StringOffset) : builder.CreateString((TableEncryptionService.UseEncryption ? TableEncryptionService.ConvertPack((string)_o.LocalizeEN, key) : _o.LocalizeEN));
    var _VoiceId = default(VectorOffset);
    if (_o.VoiceId != null) {
      var __VoiceId = _o.VoiceId.Select(x => TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((uint)x, key) : x).ToArray();
      _VoiceId = CreateVoiceIdVector(builder, __VoiceId);
    }
		var _ApplyPosition = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((bool)_o.ApplyPosition, key) : _o.ApplyPosition;
		var _PosX = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((float)_o.PosX, key) : _o.PosX;
		var _PosY = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((float)_o.PosY, key) : _o.PosY;
		var _CollectionVisible = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((bool)_o.CollectionVisible, key) : _o.CollectionVisible;
		var _CVCollectionType = TableEncryptionService.UseEncryption ? (Global.CVCollectionType)TableEncryptionService.Convert((int)_o.CVCollectionType, key) : _o.CVCollectionType;
		var _UnlockFavorRank = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((long)_o.UnlockFavorRank, key) : _o.UnlockFavorRank;
		var _UnlockEquipWeapon = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((bool)_o.UnlockEquipWeapon, key) : _o.UnlockEquipWeapon;
    var _LocalizeCVGroup = _o.LocalizeCVGroup == null ? default(StringOffset) : builder.CreateString((TableEncryptionService.UseEncryption ? TableEncryptionService.ConvertPack((string)_o.LocalizeCVGroup, key) : _o.LocalizeCVGroup));
		var _TeenMode = TableEncryptionService.UseEncryption ? TableEncryptionService.Convert((bool)_o.TeenMode, key) : _o.TeenMode;
    return CreateCharacterDialogExcel(
      builder,
      TableEncryptionService.UseEncryption ? _CharacterId : _o.CharacterId,
      TableEncryptionService.UseEncryption ? _CostumeUniqueId : _o.CostumeUniqueId,
      TableEncryptionService.UseEncryption ? _DisplayOrder : _o.DisplayOrder,
      TableEncryptionService.UseEncryption ? _ProductionStep : _o.ProductionStep,
      TableEncryptionService.UseEncryption ? _DialogCategory : _o.DialogCategory,
      TableEncryptionService.UseEncryption ? _DialogCondition : _o.DialogCondition,
      TableEncryptionService.UseEncryption ? _Anniversary : _o.Anniversary,
      _StartDate,
      _EndDate,
      TableEncryptionService.UseEncryption ? _GroupId : _o.GroupId,
      TableEncryptionService.UseEncryption ? _DialogType : _o.DialogType,
      _ActionName,
      TableEncryptionService.UseEncryption ? _Duration : _o.Duration,
      TableEncryptionService.UseEncryption ? _DurationKr : _o.DurationKr,
      _AnimationName,
      _LocalizeKR,
      _LocalizeJP,
      _LocalizeTH,
      _LocalizeTW,
      _LocalizeEN,
      _VoiceId,
      TableEncryptionService.UseEncryption ? _ApplyPosition : _o.ApplyPosition,
      TableEncryptionService.UseEncryption ? _PosX : _o.PosX,
      TableEncryptionService.UseEncryption ? _PosY : _o.PosY,
      TableEncryptionService.UseEncryption ? _CollectionVisible : _o.CollectionVisible,
      TableEncryptionService.UseEncryption ? _CVCollectionType : _o.CVCollectionType,
      TableEncryptionService.UseEncryption ? _UnlockFavorRank : _o.UnlockFavorRank,
      TableEncryptionService.UseEncryption ? _UnlockEquipWeapon : _o.UnlockEquipWeapon,
      _LocalizeCVGroup,
      TableEncryptionService.UseEncryption ? _TeenMode : _o.TeenMode);
  }
}

public class CharacterDialogExcelT
{
  public long CharacterId { get; set; }
  public long CostumeUniqueId { get; set; }
  public long DisplayOrder { get; set; }
  public Global.ProductionStep ProductionStep { get; set; }
  public Global.DialogCategory DialogCategory { get; set; }
  public Global.DialogCondition DialogCondition { get; set; }
  public Global.Anniversary Anniversary { get; set; }
  public string StartDate { get; set; }
  public string EndDate { get; set; }
  public long GroupId { get; set; }
  public Global.DialogType DialogType { get; set; }
  public string ActionName { get; set; }
  public long Duration { get; set; }
  public long DurationKr { get; set; }
  public string AnimationName { get; set; }
  public string LocalizeKR { get; set; }
  public string LocalizeJP { get; set; }
  public string LocalizeTH { get; set; }
  public string LocalizeTW { get; set; }
  public string LocalizeEN { get; set; }
  public List<uint> VoiceId { get; set; }
  public bool ApplyPosition { get; set; }
  public float PosX { get; set; }
  public float PosY { get; set; }
  public bool CollectionVisible { get; set; }
  public Global.CVCollectionType CVCollectionType { get; set; }
  public long UnlockFavorRank { get; set; }
  public bool UnlockEquipWeapon { get; set; }
  public string LocalizeCVGroup { get; set; }
  public bool TeenMode { get; set; }

  public CharacterDialogExcelT() {
    this.CharacterId = 0;
    this.CostumeUniqueId = 0;
    this.DisplayOrder = 0;
    this.ProductionStep = Global.ProductionStep.ToDo;
    this.DialogCategory = Global.DialogCategory.Cafe;
    this.DialogCondition = Global.DialogCondition.Idle;
    this.Anniversary = Global.Anniversary.None;
    this.StartDate = null;
    this.EndDate = null;
    this.GroupId = 0;
    this.DialogType = Global.DialogType.Talk;
    this.ActionName = null;
    this.Duration = 0;
    this.DurationKr = 0;
    this.AnimationName = null;
    this.LocalizeKR = null;
    this.LocalizeJP = null;
    this.LocalizeTH = null;
    this.LocalizeTW = null;
    this.LocalizeEN = null;
    this.VoiceId = null;
    this.ApplyPosition = false;
    this.PosX = 0.0f;
    this.PosY = 0.0f;
    this.CollectionVisible = false;
    this.CVCollectionType = Global.CVCollectionType.CVNormal;
    this.UnlockFavorRank = 0;
    this.UnlockEquipWeapon = false;
    this.LocalizeCVGroup = null;
    this.TeenMode = false;
  }
}


static public class CharacterDialogExcelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*CharacterId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 6 /*CostumeUniqueId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 8 /*DisplayOrder*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 10 /*ProductionStep*/, 4 /*Global.ProductionStep*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*DialogCategory*/, 4 /*Global.DialogCategory*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*DialogCondition*/, 4 /*Global.DialogCondition*/, 4, false)
      && verifier.VerifyField(tablePos, 16 /*Anniversary*/, 4 /*Global.Anniversary*/, 4, false)
      && verifier.VerifyString(tablePos, 18 /*StartDate*/, false)
      && verifier.VerifyString(tablePos, 20 /*EndDate*/, false)
      && verifier.VerifyField(tablePos, 22 /*GroupId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 24 /*DialogType*/, 4 /*Global.DialogType*/, 4, false)
      && verifier.VerifyString(tablePos, 26 /*ActionName*/, false)
      && verifier.VerifyField(tablePos, 28 /*Duration*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 30 /*DurationKr*/, 8 /*long*/, 8, false)
      && verifier.VerifyString(tablePos, 32 /*AnimationName*/, false)
      && verifier.VerifyString(tablePos, 34 /*LocalizeKR*/, false)
      && verifier.VerifyString(tablePos, 36 /*LocalizeJP*/, false)
      && verifier.VerifyString(tablePos, 38 /*LocalizeTH*/, false)
      && verifier.VerifyString(tablePos, 40 /*LocalizeTW*/, false)
      && verifier.VerifyString(tablePos, 42 /*LocalizeEN*/, false)
      && verifier.VerifyVectorOfData(tablePos, 44 /*VoiceId*/, 4 /*uint*/, false)
      && verifier.VerifyField(tablePos, 46 /*ApplyPosition*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 48 /*PosX*/, 4 /*float*/, 4, false)
      && verifier.VerifyField(tablePos, 50 /*PosY*/, 4 /*float*/, 4, false)
      && verifier.VerifyField(tablePos, 52 /*CollectionVisible*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 54 /*CVCollectionType*/, 4 /*Global.CVCollectionType*/, 4, false)
      && verifier.VerifyField(tablePos, 56 /*UnlockFavorRank*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 58 /*UnlockEquipWeapon*/, 1 /*bool*/, 1, false)
      && verifier.VerifyString(tablePos, 60 /*LocalizeCVGroup*/, false)
      && verifier.VerifyField(tablePos, 62 /*TeenMode*/, 1 /*bool*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
